{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.48.1",
    "schemaVersion": 1011,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true
      },
      "reportUnsupportedHtmlElements": false
    }
  },
  "kind": "Package",
  "canonicalReference": "@cashu/cashu-ts!",
  "docComment": "",
  "name": "@cashu/cashu-ts",
  "preserveMemberOrder": false,
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@cashu/cashu-ts!",
      "name": "",
      "preserveMemberOrder": false,
      "members": [
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cashu/cashu-ts!ApiError:type",
          "docComment": "/**\n * Cashu api error\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ApiError = "
            },
            {
              "kind": "Content",
              "text": "{\n\terror?: string;\n\tcode?: number;\n\tdetail?: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/model/types/mint/responses.d.ts",
          "releaseTag": "Public",
          "name": "ApiError",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cashu/cashu-ts!BlindAuthMintPayload:type",
          "docComment": "/**\n * Payload that needs to be sent to the mint when requesting blind auth tokens\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type BlindAuthMintPayload = "
            },
            {
              "kind": "Content",
              "text": "{\n\toutputs: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "SerializedBlindedMessage",
              "canonicalReference": "@cashu/cashu-ts!SerializedBlindedMessage:type"
            },
            {
              "kind": "Content",
              "text": ">;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/model/types/wallet/payloads.d.ts",
          "releaseTag": "Public",
          "name": "BlindAuthMintPayload",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cashu/cashu-ts!BlindAuthMintResponse:type",
          "docComment": "/**\n * Response from the mint after blind auth minting\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type BlindAuthMintResponse = "
            },
            {
              "kind": "Content",
              "text": "{\n\tsignatures: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "SerializedBlindedSignature",
              "canonicalReference": "@cashu/cashu-ts!SerializedBlindedSignature:type"
            },
            {
              "kind": "Content",
              "text": ">;\n} & "
            },
            {
              "kind": "Reference",
              "text": "ApiError",
              "canonicalReference": "@cashu/cashu-ts!ApiError:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/model/types/mint/responses.d.ts",
          "releaseTag": "Public",
          "name": "BlindAuthMintResponse",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@cashu/cashu-ts!CashuAuthMint:class",
          "docComment": "/**\n * Class represents Cashu Auth Mint API. This class contains Lower level functions that are implemented by CashuAuthWallet.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class CashuAuthMint "
            }
          ],
          "fileUrlPath": "lib/types/auth/CashuAuthMint.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "CashuAuthMint",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@cashu/cashu-ts!CashuAuthMint:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `CashuAuthMint` class\n *\n * @param _mintUrl - requires mint URL to create this object\n *\n * @param _customRequest - if passed, use custom request implementation for network communication with the mint\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(_mintUrl: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", _customRequest?: "
                },
                {
                  "kind": "Content",
                  "text": "typeof "
                },
                {
                  "kind": "Reference",
                  "text": "request",
                  "canonicalReference": "@cashu/cashu-ts!~request:function"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "_mintUrl",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "_customRequest",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!CashuAuthMint#getKeys:member(1)",
              "docComment": "/**\n * Get the mints public NUT-22 keys\n *\n * @param keysetId - optional param to get the keys for a specific keyset. If not specified, the keys from all active keysets are fetched\n *\n * @returns the mints public keys\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getKeys(keysetId?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", mintUrl?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "MintActiveKeys",
                  "canonicalReference": "@cashu/cashu-ts!MintActiveKeys:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "keysetId",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "mintUrl",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getKeys"
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!CashuAuthMint.getKeys:member(1)",
              "docComment": "/**\n * Get the mints public NUT-22 keys\n *\n * @param mintUrl - \n *\n * @param keysetId - optional param to get the keys for a specific keyset. If not specified, the keys from all active keysets are fetched\n *\n * @param customRequest - \n *\n * @returns \n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static getKeys(\n\t\tmintUrl: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ",\n\t\tkeysetId?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ",\n\t\tcustomRequest?: "
                },
                {
                  "kind": "Content",
                  "text": "typeof "
                },
                {
                  "kind": "Reference",
                  "text": "request",
                  "canonicalReference": "@cashu/cashu-ts!~request:function"
                },
                {
                  "kind": "Content",
                  "text": "\n\t): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "MintActiveKeys",
                  "canonicalReference": "@cashu/cashu-ts!MintActiveKeys:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "mintUrl",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "keysetId",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "customRequest",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 7
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getKeys"
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!CashuAuthMint#getKeySets:member(1)",
              "docComment": "/**\n * Get the mints NUT-22 keysets in no specific order\n *\n * @returns all the mints past and current keysets.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getKeySets(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "MintAllKeysets",
                  "canonicalReference": "@cashu/cashu-ts!MintAllKeysets:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getKeySets"
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!CashuAuthMint.getKeySets:member(1)",
              "docComment": "/**\n * Get the mints NUT-22 keysets in no specific order\n *\n * @param mintUrl - \n *\n * @param customRequest - \n *\n * @returns all the mints past and current keysets.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static getKeySets(mintUrl: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", customRequest?: "
                },
                {
                  "kind": "Content",
                  "text": "typeof "
                },
                {
                  "kind": "Reference",
                  "text": "request",
                  "canonicalReference": "@cashu/cashu-ts!~request:function"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "MintAllKeysets",
                  "canonicalReference": "@cashu/cashu-ts!MintAllKeysets:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "mintUrl",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "customRequest",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getKeySets"
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!CashuAuthMint#mint:member(1)",
              "docComment": "/**\n * Mints new Blinded Authentication tokens by requesting blind signatures on the provided outputs.\n *\n * @param mintPayload - Payload containing the outputs to get blind signatures on\n *\n * @param clearAuthToken - A NUT-21 clear auth token\n *\n * @returns serialized blinded signatures\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mint(mintPayload: "
                },
                {
                  "kind": "Reference",
                  "text": "BlindAuthMintPayload",
                  "canonicalReference": "@cashu/cashu-ts!BlindAuthMintPayload:type"
                },
                {
                  "kind": "Content",
                  "text": ", clearAuthToken: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "BlindAuthMintResponse",
                  "canonicalReference": "@cashu/cashu-ts!BlindAuthMintResponse:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "mintPayload",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "clearAuthToken",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mint"
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!CashuAuthMint.mint:member(1)",
              "docComment": "/**\n * Mints new Blinded Authentication tokens by requesting blind signatures on the provided outputs.\n *\n * @param mintUrl - \n *\n * @param mintPayload - Payload containing the outputs to get blind signatures on\n *\n * @param clearAuthToken - A NUT-21 clear auth token\n *\n * @param customRequest - \n *\n * @returns serialized blinded signatures\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static mint(\n\t\tmintUrl: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ",\n\t\tmintPayload: "
                },
                {
                  "kind": "Reference",
                  "text": "BlindAuthMintPayload",
                  "canonicalReference": "@cashu/cashu-ts!BlindAuthMintPayload:type"
                },
                {
                  "kind": "Content",
                  "text": ",\n\t\tclearAuthToken: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ",\n\t\tcustomRequest?: "
                },
                {
                  "kind": "Content",
                  "text": "typeof "
                },
                {
                  "kind": "Reference",
                  "text": "request",
                  "canonicalReference": "@cashu/cashu-ts!~request:function"
                },
                {
                  "kind": "Content",
                  "text": "\n\t): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "BlindAuthMintResponse",
                  "canonicalReference": "@cashu/cashu-ts!BlindAuthMintResponse:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 14
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "mintUrl",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "mintPayload",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "clearAuthToken",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "customRequest",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 9
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mint"
            },
            {
              "kind": "Property",
              "canonicalReference": "@cashu/cashu-ts!CashuAuthMint#mintUrl:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get mintUrl(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "mintUrl",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@cashu/cashu-ts!CashuAuthWallet:class",
          "docComment": "/**\n * Class that represents a Cashu NUT-22 wallet.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class CashuAuthWallet "
            }
          ],
          "fileUrlPath": "lib/types/auth/CashuAuthWallet.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "CashuAuthWallet",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@cashu/cashu-ts!CashuAuthWallet:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `CashuAuthWallet` class\n *\n * @param mint - NUT-22 auth mint instance\n *\n * @param  - options.keys public keys from the mint (will be fetched from mint if not provided)\n *\n * @param  - options.keysets keysets from the mint (will be fetched from mint if not provided)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(\n\t\tmint: "
                },
                {
                  "kind": "Reference",
                  "text": "CashuAuthMint",
                  "canonicalReference": "@cashu/cashu-ts!CashuAuthMint:class"
                },
                {
                  "kind": "Content",
                  "text": ",\n\t\toptions?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n\t\t\tkeys?: "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "MintKeys",
                  "canonicalReference": "@cashu/cashu-ts!MintKeys:type"
                },
                {
                  "kind": "Content",
                  "text": "> | "
                },
                {
                  "kind": "Reference",
                  "text": "MintKeys",
                  "canonicalReference": "@cashu/cashu-ts!MintKeys:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n\t\t\tkeysets?: "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "MintKeyset",
                  "canonicalReference": "@cashu/cashu-ts!MintKeyset:type"
                },
                {
                  "kind": "Content",
                  "text": ">;\n\t\t}"
                },
                {
                  "kind": "Content",
                  "text": "\n\t);"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "mint",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 14
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!CashuAuthWallet#getActiveKeyset:member(1)",
              "docComment": "/**\n * Choose a keyset to activate based on the lowest input fee\n *\n * Note: this function will filter out deprecated base64 keysets\n *\n * @param keysets - keysets to choose from\n *\n * @returns active keyset\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getActiveKeyset(keysets: "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "MintKeyset",
                  "canonicalReference": "@cashu/cashu-ts!MintKeyset:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "MintKeyset",
                  "canonicalReference": "@cashu/cashu-ts!MintKeyset:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "keysets",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getActiveKeyset"
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!CashuAuthWallet#getAllKeys:member(1)",
              "docComment": "/**\n * Get all active keys from the mint and set the keyset with the lowest fees as the active wallet keyset.\n *\n * @returns keyset\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getAllKeys(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "MintKeys",
                  "canonicalReference": "@cashu/cashu-ts!MintKeys:type"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getAllKeys"
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!CashuAuthWallet#getKeys:member(1)",
              "docComment": "/**\n * Get public keys from the mint. If keys were already fetched, it will return those.\n *\n * If `keysetId` is set, it will fetch and return that specific keyset. Otherwise, we select an active keyset with the unit of the wallet.\n *\n * @param keysetId - optional keysetId to get keys for\n *\n * @param forceRefresh - ? if set to true, it will force refresh the keyset from the mint\n *\n * @returns keyset\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getKeys(keysetId?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", forceRefresh?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "MintKeys",
                  "canonicalReference": "@cashu/cashu-ts!MintKeys:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "keysetId",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "forceRefresh",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getKeys"
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!CashuAuthWallet#getKeySets:member(1)",
              "docComment": "/**\n * Get keysets from the mint with the unit of the wallet\n *\n * @returns keysets with wallet's unit\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getKeySets(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "MintKeyset",
                  "canonicalReference": "@cashu/cashu-ts!MintKeyset:type"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getKeySets"
            },
            {
              "kind": "Property",
              "canonicalReference": "@cashu/cashu-ts!CashuAuthWallet#keys:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get keys(): "
                },
                {
                  "kind": "Reference",
                  "text": "Map",
                  "canonicalReference": "!Map:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string, "
                },
                {
                  "kind": "Reference",
                  "text": "MintKeys",
                  "canonicalReference": "@cashu/cashu-ts!MintKeys:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "keys",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@cashu/cashu-ts!CashuAuthWallet#keysetId:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get keysetId(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";\n\nset keysetId(keysetId: string);"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "keysetId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@cashu/cashu-ts!CashuAuthWallet#keysets:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get keysets(): "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "MintKeyset",
                  "canonicalReference": "@cashu/cashu-ts!MintKeyset:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "keysets",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!CashuAuthWallet#loadMint:member(1)",
              "docComment": "/**\n * Load mint information, keysets and keys. This function can be called if no keysets are passed in the constructor\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "loadMint(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "loadMint"
            },
            {
              "kind": "Property",
              "canonicalReference": "@cashu/cashu-ts!CashuAuthWallet#mint:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mint: "
                },
                {
                  "kind": "Reference",
                  "text": "CashuAuthMint",
                  "canonicalReference": "@cashu/cashu-ts!CashuAuthMint:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "mint",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!CashuAuthWallet#mintProofs:member(1)",
              "docComment": "/**\n * Mint proofs for a given mint quote\n *\n * @param amount - amount to request\n *\n * @param clearAuthToken - clearAuthToken to mint\n *\n * @param  - options.keysetId? optionally set keysetId for blank outputs for returned change.\n *\n * @returns proofs\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mintProofs(\n\t\tamount: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ",\n\t\tclearAuthToken: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ",\n\t\toptions?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n\t\t\tkeysetId?: string;\n\t\t}"
                },
                {
                  "kind": "Content",
                  "text": "\n\t): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Proof",
                  "canonicalReference": "@cashu/cashu-ts!Proof:type"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "amount",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "clearAuthToken",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mintProofs"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@cashu/cashu-ts!CashuMint:class",
          "docComment": "/**\n * Class represents Cashu Mint API. This class contains Lower level functions that are implemented by CashuWallet.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class CashuMint "
            }
          ],
          "fileUrlPath": "lib/types/CashuMint.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "CashuMint",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@cashu/cashu-ts!CashuMint:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `CashuMint` class\n *\n * @param _mintUrl - requires mint URL to create this object\n *\n * @param _customRequest - if passed, use custom request implementation for network communication with the mint\n *\n * @param authTokenGetter - a function that is called by the CashuMint instance to obtain a NUT-22 BlindedAuthToken (e.g. from a database or localstorage)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(\n\t\t_mintUrl: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ",\n\t\t_customRequest?: "
                },
                {
                  "kind": "Content",
                  "text": "typeof "
                },
                {
                  "kind": "Reference",
                  "text": "request",
                  "canonicalReference": "@cashu/cashu-ts!~request:function"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ",\n\t\tauthTokenGetter?: "
                },
                {
                  "kind": "Content",
                  "text": "() => "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string>"
                },
                {
                  "kind": "Content",
                  "text": "\n\t);"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "_mintUrl",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "_customRequest",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "authTokenGetter",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 10
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!CashuMint#check:member(1)",
              "docComment": "/**\n * Checks if specific proofs have already been redeemed\n *\n * @param checkPayload - \n *\n * @returns redeemed and unredeemed ordered list of booleans\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "check(checkPayload: "
                },
                {
                  "kind": "Reference",
                  "text": "CheckStatePayload",
                  "canonicalReference": "@cashu/cashu-ts!CheckStatePayload:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "CheckStateResponse",
                  "canonicalReference": "@cashu/cashu-ts!CheckStateResponse:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "checkPayload",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "check"
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!CashuMint.check:member(1)",
              "docComment": "/**\n * Checks if specific proofs have already been redeemed\n *\n * @param mintUrl - \n *\n * @param checkPayload - \n *\n * @param customRequest - \n *\n * @returns redeemed and unredeemed ordered list of booleans\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static check(\n\t\tmintUrl: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ",\n\t\tcheckPayload: "
                },
                {
                  "kind": "Reference",
                  "text": "CheckStatePayload",
                  "canonicalReference": "@cashu/cashu-ts!CheckStatePayload:type"
                },
                {
                  "kind": "Content",
                  "text": ",\n\t\tcustomRequest?: "
                },
                {
                  "kind": "Content",
                  "text": "typeof "
                },
                {
                  "kind": "Reference",
                  "text": "request",
                  "canonicalReference": "@cashu/cashu-ts!~request:function"
                },
                {
                  "kind": "Content",
                  "text": "\n\t): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "CheckStateResponse",
                  "canonicalReference": "@cashu/cashu-ts!CheckStateResponse:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "mintUrl",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "checkPayload",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "customRequest",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 7
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "check"
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!CashuMint#checkMeltQuote:member(1)",
              "docComment": "/**\n * Gets an existing melt quote.\n *\n * @param quote - Quote ID\n *\n * @returns \n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "checkMeltQuote(quote: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "PartialMeltQuoteResponse",
                  "canonicalReference": "@cashu/cashu-ts!PartialMeltQuoteResponse:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "quote",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "checkMeltQuote"
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!CashuMint.checkMeltQuote:member(1)",
              "docComment": "/**\n * Gets an existing melt quote.\n *\n * @param mintUrl - \n *\n * @param quote - Quote ID\n *\n * @returns \n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static checkMeltQuote(\n\t\tmintUrl: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ",\n\t\tquote: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ",\n\t\tcustomRequest?: "
                },
                {
                  "kind": "Content",
                  "text": "typeof "
                },
                {
                  "kind": "Reference",
                  "text": "request",
                  "canonicalReference": "@cashu/cashu-ts!~request:function"
                },
                {
                  "kind": "Content",
                  "text": ",\n\t\tblindAuthToken?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "\n\t): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "PartialMeltQuoteResponse",
                  "canonicalReference": "@cashu/cashu-ts!PartialMeltQuoteResponse:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 14
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "mintUrl",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "quote",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "customRequest",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 7
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "blindAuthToken",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "checkMeltQuote"
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!CashuMint#checkMintQuote:member(1)",
              "docComment": "/**\n * Gets an existing mint quote from the mint.\n *\n * @param quote - Quote ID\n *\n * @returns the mint will create and return a Lightning invoice for the specified amount\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "checkMintQuote(quote: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "PartialMintQuoteResponse",
                  "canonicalReference": "@cashu/cashu-ts!PartialMintQuoteResponse:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "quote",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "checkMintQuote"
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!CashuMint.checkMintQuote:member(1)",
              "docComment": "/**\n * Gets an existing mint quote from the mint.\n *\n * @param mintUrl - \n *\n * @param quote - Quote ID\n *\n * @param customRequest - \n *\n * @returns the mint will create and return a Lightning invoice for the specified amount\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static checkMintQuote(\n\t\tmintUrl: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ",\n\t\tquote: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ",\n\t\tcustomRequest?: "
                },
                {
                  "kind": "Content",
                  "text": "typeof "
                },
                {
                  "kind": "Reference",
                  "text": "request",
                  "canonicalReference": "@cashu/cashu-ts!~request:function"
                },
                {
                  "kind": "Content",
                  "text": ",\n\t\tblindAuthToken?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "\n\t): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "PartialMintQuoteResponse",
                  "canonicalReference": "@cashu/cashu-ts!PartialMintQuoteResponse:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 14
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "mintUrl",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "quote",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "customRequest",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 7
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "blindAuthToken",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "checkMintQuote"
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!CashuMint#connectWebSocket:member(1)",
              "docComment": "/**\n * Tries to establish a websocket connection with the websocket mint url according to NUT-17\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "connectWebSocket(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "connectWebSocket"
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!CashuMint#createMeltQuote:member(1)",
              "docComment": "/**\n * Requests a new melt quote from the mint.\n *\n * @param MeltQuotePayload - \n *\n * @returns \n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "createMeltQuote(meltQuotePayload: "
                },
                {
                  "kind": "Reference",
                  "text": "MeltQuotePayload",
                  "canonicalReference": "@cashu/cashu-ts!MeltQuotePayload:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "PartialMeltQuoteResponse",
                  "canonicalReference": "@cashu/cashu-ts!PartialMeltQuoteResponse:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "meltQuotePayload",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "createMeltQuote"
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!CashuMint.createMeltQuote:member(1)",
              "docComment": "/**\n * Requests a new melt quote from the mint.\n *\n * @param mintUrl - \n *\n * @param MeltQuotePayload - \n *\n * @returns \n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static createMeltQuote(\n\t\tmintUrl: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ",\n\t\tmeltQuotePayload: "
                },
                {
                  "kind": "Reference",
                  "text": "MeltQuotePayload",
                  "canonicalReference": "@cashu/cashu-ts!MeltQuotePayload:type"
                },
                {
                  "kind": "Content",
                  "text": ",\n\t\tcustomRequest?: "
                },
                {
                  "kind": "Content",
                  "text": "typeof "
                },
                {
                  "kind": "Reference",
                  "text": "request",
                  "canonicalReference": "@cashu/cashu-ts!~request:function"
                },
                {
                  "kind": "Content",
                  "text": ",\n\t\tblindAuthToken?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "\n\t): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "PartialMeltQuoteResponse",
                  "canonicalReference": "@cashu/cashu-ts!PartialMeltQuoteResponse:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 14
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "mintUrl",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "meltQuotePayload",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "customRequest",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 7
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "blindAuthToken",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "createMeltQuote"
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!CashuMint#createMintQuote:member(1)",
              "docComment": "/**\n * Requests a new mint quote from the mint.\n *\n * @param mintQuotePayload - Payload for creating a new mint quote\n *\n * @returns the mint will create and return a new mint quote containing a payment request for the specified amount and unit\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "createMintQuote(mintQuotePayload: "
                },
                {
                  "kind": "Reference",
                  "text": "MintQuotePayload",
                  "canonicalReference": "@cashu/cashu-ts!MintQuotePayload:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "PartialMintQuoteResponse",
                  "canonicalReference": "@cashu/cashu-ts!PartialMintQuoteResponse:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "mintQuotePayload",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "createMintQuote"
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!CashuMint.createMintQuote:member(1)",
              "docComment": "/**\n * Requests a new mint quote from the mint.\n *\n * @param mintUrl - \n *\n * @param mintQuotePayload - Payload for creating a new mint quote\n *\n * @param customRequest - \n *\n * @returns the mint will create and return a new mint quote containing a payment request for the specified amount and unit\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static createMintQuote(\n\t\tmintUrl: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ",\n\t\tmintQuotePayload: "
                },
                {
                  "kind": "Reference",
                  "text": "MintQuotePayload",
                  "canonicalReference": "@cashu/cashu-ts!MintQuotePayload:type"
                },
                {
                  "kind": "Content",
                  "text": ",\n\t\tcustomRequest?: "
                },
                {
                  "kind": "Content",
                  "text": "typeof "
                },
                {
                  "kind": "Reference",
                  "text": "request",
                  "canonicalReference": "@cashu/cashu-ts!~request:function"
                },
                {
                  "kind": "Content",
                  "text": ",\n\t\tblindAuthToken?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "\n\t): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "PartialMintQuoteResponse",
                  "canonicalReference": "@cashu/cashu-ts!PartialMintQuoteResponse:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 14
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "mintUrl",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "mintQuotePayload",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "customRequest",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 7
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "blindAuthToken",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "createMintQuote"
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!CashuMint#disconnectWebSocket:member(1)",
              "docComment": "/**\n * Closes a websocket connection\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "disconnectWebSocket(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "disconnectWebSocket"
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!CashuMint#getInfo:member(1)",
              "docComment": "/**\n * fetches mints info at the /info endpoint\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getInfo(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "GetInfoResponse",
                  "canonicalReference": "@cashu/cashu-ts!GetInfoResponse:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getInfo"
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!CashuMint.getInfo:member(1)",
              "docComment": "/**\n * fetches mints info at the /info endpoint\n *\n * @param mintUrl - \n *\n * @param customRequest - \n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static getInfo(mintUrl: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", customRequest?: "
                },
                {
                  "kind": "Content",
                  "text": "typeof "
                },
                {
                  "kind": "Reference",
                  "text": "request",
                  "canonicalReference": "@cashu/cashu-ts!~request:function"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "GetInfoResponse",
                  "canonicalReference": "@cashu/cashu-ts!GetInfoResponse:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "mintUrl",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "customRequest",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getInfo"
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!CashuMint#getKeys:member(1)",
              "docComment": "/**\n * Get the mints public keys\n *\n * @param keysetId - optional param to get the keys for a specific keyset. If not specified, the keys from all active keysets are fetched\n *\n * @returns the mints public keys\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getKeys(keysetId?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", mintUrl?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "MintActiveKeys",
                  "canonicalReference": "@cashu/cashu-ts!MintActiveKeys:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "keysetId",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "mintUrl",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getKeys"
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!CashuMint.getKeys:member(1)",
              "docComment": "/**\n * Get the mints public keys\n *\n * @param mintUrl - \n *\n * @param keysetId - optional param to get the keys for a specific keyset. If not specified, the keys from all active keysets are fetched\n *\n * @param customRequest - \n *\n * @returns \n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static getKeys(\n\t\tmintUrl: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ",\n\t\tkeysetId?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ",\n\t\tcustomRequest?: "
                },
                {
                  "kind": "Content",
                  "text": "typeof "
                },
                {
                  "kind": "Reference",
                  "text": "request",
                  "canonicalReference": "@cashu/cashu-ts!~request:function"
                },
                {
                  "kind": "Content",
                  "text": "\n\t): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "MintActiveKeys",
                  "canonicalReference": "@cashu/cashu-ts!MintActiveKeys:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "mintUrl",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "keysetId",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "customRequest",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 7
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getKeys"
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!CashuMint#getKeySets:member(1)",
              "docComment": "/**\n * Get the mints keysets in no specific order\n *\n * @returns all the mints past and current keysets.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getKeySets(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "MintAllKeysets",
                  "canonicalReference": "@cashu/cashu-ts!MintAllKeysets:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getKeySets"
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!CashuMint.getKeySets:member(1)",
              "docComment": "/**\n * Get the mints keysets in no specific order\n *\n * @param mintUrl - \n *\n * @param customRequest - \n *\n * @returns all the mints past and current keysets.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static getKeySets(mintUrl: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", customRequest?: "
                },
                {
                  "kind": "Content",
                  "text": "typeof "
                },
                {
                  "kind": "Reference",
                  "text": "request",
                  "canonicalReference": "@cashu/cashu-ts!~request:function"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "MintAllKeysets",
                  "canonicalReference": "@cashu/cashu-ts!MintAllKeysets:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "mintUrl",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "customRequest",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getKeySets"
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!CashuMint#getLazyMintInfo:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getLazyMintInfo(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "MintInfo",
                  "canonicalReference": "@cashu/cashu-ts!~MintInfo:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getLazyMintInfo"
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!CashuMint#handleBlindAuth:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "handleBlindAuth(path: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string | undefined>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "path",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "handleBlindAuth"
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!CashuMint#melt:member(1)",
              "docComment": "/**\n * Ask mint to perform a melt operation. This pays a lightning invoice and destroys tokens matching its amount + fees\n *\n * @param meltPayload - \n *\n * @returns \n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "melt(meltPayload: "
                },
                {
                  "kind": "Reference",
                  "text": "MeltPayload",
                  "canonicalReference": "@cashu/cashu-ts!MeltPayload:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "PartialMeltQuoteResponse",
                  "canonicalReference": "@cashu/cashu-ts!PartialMeltQuoteResponse:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "meltPayload",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "melt"
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!CashuMint.melt:member(1)",
              "docComment": "/**\n * Requests the mint to pay for a Bolt11 payment request by providing ecash as inputs to be spent. The inputs contain the amount and the fee_reserves for a Lightning payment. The payload can also contain blank outputs in order to receive back overpaid Lightning fees.\n *\n * @param mintUrl - \n *\n * @param meltPayload - \n *\n * @param customRequest - \n *\n * @returns \n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static melt(\n\t\tmintUrl: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ",\n\t\tmeltPayload: "
                },
                {
                  "kind": "Reference",
                  "text": "MeltPayload",
                  "canonicalReference": "@cashu/cashu-ts!MeltPayload:type"
                },
                {
                  "kind": "Content",
                  "text": ",\n\t\tcustomRequest?: "
                },
                {
                  "kind": "Content",
                  "text": "typeof "
                },
                {
                  "kind": "Reference",
                  "text": "request",
                  "canonicalReference": "@cashu/cashu-ts!~request:function"
                },
                {
                  "kind": "Content",
                  "text": ",\n\t\tblindAuthToken?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "\n\t): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "PartialMeltQuoteResponse",
                  "canonicalReference": "@cashu/cashu-ts!PartialMeltQuoteResponse:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 14
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "mintUrl",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "meltPayload",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "customRequest",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 7
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "blindAuthToken",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "melt"
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!CashuMint#mint:member(1)",
              "docComment": "/**\n * Mints new tokens by requesting blind signatures on the provided outputs.\n *\n * @param mintPayload - Payload containing the outputs to get blind signatures on\n *\n * @returns serialized blinded signatures\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mint(mintPayload: "
                },
                {
                  "kind": "Reference",
                  "text": "MintPayload",
                  "canonicalReference": "@cashu/cashu-ts!MintPayload:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "MintResponse",
                  "canonicalReference": "@cashu/cashu-ts!MintResponse:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "mintPayload",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mint"
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!CashuMint.mint:member(1)",
              "docComment": "/**\n * Mints new tokens by requesting blind signatures on the provided outputs.\n *\n * @param mintUrl - \n *\n * @param mintPayload - Payload containing the outputs to get blind signatures on\n *\n * @param customRequest - \n *\n * @returns serialized blinded signatures\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static mint(\n\t\tmintUrl: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ",\n\t\tmintPayload: "
                },
                {
                  "kind": "Reference",
                  "text": "MintPayload",
                  "canonicalReference": "@cashu/cashu-ts!MintPayload:type"
                },
                {
                  "kind": "Content",
                  "text": ",\n\t\tcustomRequest?: "
                },
                {
                  "kind": "Content",
                  "text": "typeof "
                },
                {
                  "kind": "Reference",
                  "text": "request",
                  "canonicalReference": "@cashu/cashu-ts!~request:function"
                },
                {
                  "kind": "Content",
                  "text": ",\n\t\tblindAuthToken?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "\n\t): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "MintResponse",
                  "canonicalReference": "@cashu/cashu-ts!MintResponse:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 14
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "mintUrl",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "mintPayload",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "customRequest",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 7
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "blindAuthToken",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mint"
            },
            {
              "kind": "Property",
              "canonicalReference": "@cashu/cashu-ts!CashuMint#mintUrl:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get mintUrl(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "mintUrl",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!CashuMint#restore:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "restore(restorePayload: "
                },
                {
                  "kind": "Content",
                  "text": "{\n\t\toutputs: "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SerializedBlindedMessage",
                  "canonicalReference": "@cashu/cashu-ts!SerializedBlindedMessage:type"
                },
                {
                  "kind": "Content",
                  "text": ">;\n\t}"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "PostRestoreResponse",
                  "canonicalReference": "@cashu/cashu-ts!PostRestoreResponse:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "restorePayload",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "restore"
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!CashuMint.restore:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static restore(\n\t\tmintUrl: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ",\n\t\trestorePayload: "
                },
                {
                  "kind": "Reference",
                  "text": "PostRestorePayload",
                  "canonicalReference": "@cashu/cashu-ts!PostRestorePayload:type"
                },
                {
                  "kind": "Content",
                  "text": ",\n\t\tcustomRequest?: "
                },
                {
                  "kind": "Content",
                  "text": "typeof "
                },
                {
                  "kind": "Reference",
                  "text": "request",
                  "canonicalReference": "@cashu/cashu-ts!~request:function"
                },
                {
                  "kind": "Content",
                  "text": "\n\t): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "PostRestoreResponse",
                  "canonicalReference": "@cashu/cashu-ts!PostRestoreResponse:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "mintUrl",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "restorePayload",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "customRequest",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 7
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "restore"
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!CashuMint#swap:member(1)",
              "docComment": "/**\n * Performs a swap operation with ecash inputs and outputs.\n *\n * @param swapPayload - payload containing inputs and outputs\n *\n * @returns signed outputs\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "swap(swapPayload: "
                },
                {
                  "kind": "Reference",
                  "text": "SwapPayload",
                  "canonicalReference": "@cashu/cashu-ts!SwapPayload:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SwapResponse",
                  "canonicalReference": "@cashu/cashu-ts!SwapResponse:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "swapPayload",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "swap"
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!CashuMint.swap:member(1)",
              "docComment": "/**\n * Performs a swap operation with ecash inputs and outputs.\n *\n * @param mintUrl - \n *\n * @param swapPayload - payload containing inputs and outputs\n *\n * @param customRequest - \n *\n * @returns signed outputs\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static swap(\n\t\tmintUrl: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ",\n\t\tswapPayload: "
                },
                {
                  "kind": "Reference",
                  "text": "SwapPayload",
                  "canonicalReference": "@cashu/cashu-ts!SwapPayload:type"
                },
                {
                  "kind": "Content",
                  "text": ",\n\t\tcustomRequest?: "
                },
                {
                  "kind": "Content",
                  "text": "typeof "
                },
                {
                  "kind": "Reference",
                  "text": "request",
                  "canonicalReference": "@cashu/cashu-ts!~request:function"
                },
                {
                  "kind": "Content",
                  "text": ",\n\t\tblindAuthToken?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "\n\t): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SwapResponse",
                  "canonicalReference": "@cashu/cashu-ts!SwapResponse:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 14
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "mintUrl",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "swapPayload",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "customRequest",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 7
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "blindAuthToken",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "swap"
            },
            {
              "kind": "Property",
              "canonicalReference": "@cashu/cashu-ts!CashuMint#webSocketConnection:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get webSocketConnection(): "
                },
                {
                  "kind": "Reference",
                  "text": "WSConnection",
                  "canonicalReference": "@cashu/cashu-ts!~WSConnection:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "webSocketConnection",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@cashu/cashu-ts!CashuWallet:class",
          "docComment": "/**\n * Class that represents a Cashu wallet. This class should act as the entry point for this library\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class CashuWallet "
            }
          ],
          "fileUrlPath": "lib/types/CashuWallet.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "CashuWallet",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@cashu/cashu-ts!CashuWallet:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `CashuWallet` class\n *\n * @param mint - Cashu mint instance is used to make api calls\n *\n * @param  - options.unit optionally set unit (default is 'sat')\n *\n * @param  - options.keys public keys from the mint (will be fetched from mint if not provided)\n *\n * @param  - options.keysets keysets from the mint (will be fetched from mint if not provided)\n *\n * @param  - options.mintInfo mint info from the mint (will be fetched from mint if not provided)\n *\n * @param  - options.denominationTarget target number proofs per denomination (default: see  @constant DEFAULT_DENOMINATION_TARGET)\n *\n * @param  - options.bip39seed BIP39 seed for deterministic secrets.\n *\n * @param  - options.keepFactory A function that will be used by all parts of the library that produce proofs to be kept (change, etc.). This can lead to poor performance, in which case the seed should be directly provided\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(\n\t\tmint: "
                },
                {
                  "kind": "Reference",
                  "text": "CashuMint",
                  "canonicalReference": "@cashu/cashu-ts!CashuMint:class"
                },
                {
                  "kind": "Content",
                  "text": ",\n\t\toptions?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n\t\t\tunit?: string;\n\t\t\tkeys?: "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "MintKeys",
                  "canonicalReference": "@cashu/cashu-ts!MintKeys:type"
                },
                {
                  "kind": "Content",
                  "text": "> | "
                },
                {
                  "kind": "Reference",
                  "text": "MintKeys",
                  "canonicalReference": "@cashu/cashu-ts!MintKeys:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n\t\t\tkeysets?: "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "MintKeyset",
                  "canonicalReference": "@cashu/cashu-ts!MintKeyset:type"
                },
                {
                  "kind": "Content",
                  "text": ">;\n\t\t\tmintInfo?: "
                },
                {
                  "kind": "Reference",
                  "text": "GetInfoResponse",
                  "canonicalReference": "@cashu/cashu-ts!GetInfoResponse:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n\t\t\tbip39seed?: "
                },
                {
                  "kind": "Reference",
                  "text": "Uint8Array",
                  "canonicalReference": "!Uint8Array:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n\t\t\tdenominationTarget?: number;\n\t\t\tkeepFactory?: "
                },
                {
                  "kind": "Reference",
                  "text": "OutputDataFactory",
                  "canonicalReference": "@cashu/cashu-ts!~OutputDataFactory:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n\t\t}"
                },
                {
                  "kind": "Content",
                  "text": "\n\t);"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "mint",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 20
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!CashuWallet#batchRestore:member(1)",
              "docComment": "/**\n * Restores batches of deterministic proofs until no more signatures are returned from the mint\n *\n * @param gapLimit - the amount of empty counters that should be returned before restoring ends (defaults to 300)\n *\n * @param batchSize - the amount of proofs that should be restored at a time (defaults to 100)\n *\n * @param counter - the counter that should be used as a starting point (defaults to 0)\n *\n * @param keysetId - which keysetId to use for the restoration. If none is passed the instance's default one will be used\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "batchRestore(\n\t\tgapLimit?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ",\n\t\tbatchSize?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ",\n\t\tcounter?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ",\n\t\tkeysetId?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "\n\t): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<{\n\t\tproofs: "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Proof",
                  "canonicalReference": "@cashu/cashu-ts!Proof:type"
                },
                {
                  "kind": "Content",
                  "text": ">;\n\t\tlastCounterWithSignature?: number;\n\t}>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 15
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "gapLimit",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "batchSize",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "counter",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "keysetId",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "batchRestore"
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!CashuWallet#checkMeltQuote:member(1)",
              "docComment": "/**\n * Return an existing melt quote from the mint.\n *\n * @param quote - ID of the melt quote\n *\n * @returns the mint will return an existing melt quote\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "checkMeltQuote(quote: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "PartialMeltQuoteResponse",
                  "canonicalReference": "@cashu/cashu-ts!PartialMeltQuoteResponse:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "quote",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "checkMeltQuote"
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!CashuWallet#checkMeltQuote:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "checkMeltQuote(quote: "
                },
                {
                  "kind": "Reference",
                  "text": "MeltQuoteResponse",
                  "canonicalReference": "@cashu/cashu-ts!MeltQuoteResponse:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "MeltQuoteResponse",
                  "canonicalReference": "@cashu/cashu-ts!MeltQuoteResponse:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "quote",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "checkMeltQuote"
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!CashuWallet#checkMintQuote:member(1)",
              "docComment": "/**\n * Gets an existing mint quote from the mint.\n *\n * @param quote - Quote ID\n *\n * @returns the mint will create and return a Lightning invoice for the specified amount\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "checkMintQuote(quote: "
                },
                {
                  "kind": "Reference",
                  "text": "MintQuoteResponse",
                  "canonicalReference": "@cashu/cashu-ts!MintQuoteResponse:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "MintQuoteResponse",
                  "canonicalReference": "@cashu/cashu-ts!MintQuoteResponse:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "quote",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "checkMintQuote"
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!CashuWallet#checkMintQuote:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "checkMintQuote(quote: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "PartialMintQuoteResponse",
                  "canonicalReference": "@cashu/cashu-ts!PartialMintQuoteResponse:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "quote",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "checkMintQuote"
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!CashuWallet#checkProofsStates:member(1)",
              "docComment": "/**\n * Get an array of the states of proofs from the mint (as an array of CheckStateEnum's)\n *\n * @param proofs - (only the `secret` field is required)\n *\n * @returns \n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "checkProofsStates(proofs: "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Proof",
                  "canonicalReference": "@cashu/cashu-ts!Proof:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ProofState",
                  "canonicalReference": "@cashu/cashu-ts!ProofState:type"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "proofs",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "checkProofsStates"
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!CashuWallet#createLockedMintQuote:member(1)",
              "docComment": "/**\n * Requests a mint quote from the mint that is locked to a public key.\n *\n * @param amount - Amount requesting for mint.\n *\n * @param pubkey - public key to lock the quote to\n *\n * @param description - optional description for the mint quote\n *\n * @returns the mint will return a mint quote with a Lightning invoice for minting tokens of the specified amount and unit. The quote will be locked to the specified `pubkey`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "createLockedMintQuote(\n\t\tamount: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ",\n\t\tpubkey: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ",\n\t\tdescription?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "\n\t): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "LockedMintQuoteResponse",
                  "canonicalReference": "@cashu/cashu-ts!LockedMintQuoteResponse:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "amount",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "pubkey",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "description",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "createLockedMintQuote"
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!CashuWallet#createMeltQuote:member(1)",
              "docComment": "/**\n * Requests a melt quote from the mint. Response returns amount and fees for a given unit in order to pay a Lightning invoice.\n *\n * @param invoice - LN invoice that needs to get a fee estimate\n *\n * @returns the mint will create and return a melt quote for the invoice with an amount and fee reserve\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "createMeltQuote(invoice: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "MeltQuoteResponse",
                  "canonicalReference": "@cashu/cashu-ts!MeltQuoteResponse:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "invoice",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "createMeltQuote"
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!CashuWallet#createMintQuote:member(1)",
              "docComment": "/**\n * Requests a mint quote form the mint. Response returns a Lightning payment request for the requested given amount and unit.\n *\n * @param amount - Amount requesting for mint.\n *\n * @param description - optional description for the mint quote\n *\n * @param pubkey - optional public key to lock the quote to\n *\n * @returns the mint will return a mint quote with a Lightning invoice for minting tokens of the specified amount and unit\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "createMintQuote(amount: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", description?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "MintQuoteResponse",
                  "canonicalReference": "@cashu/cashu-ts!MintQuoteResponse:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "amount",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "description",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "createMintQuote"
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!CashuWallet#createMultiPathMeltQuote:member(1)",
              "docComment": "/**\n * Requests a multi path melt quote from the mint.\n *\n * @param invoice - LN invoice that needs to get a fee estimate\n *\n * @param partialAmount - the partial amount of the invoice's total to be paid by this instance\n *\n * @returns the mint will create and return a melt quote for the invoice with an amount and fee reserve\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "createMultiPathMeltQuote(\n\t\tinvoice: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ",\n\t\tmillisatPartialAmount: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "\n\t): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "MeltQuoteResponse",
                  "canonicalReference": "@cashu/cashu-ts!MeltQuoteResponse:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "invoice",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "millisatPartialAmount",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "createMultiPathMeltQuote"
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!CashuWallet#getActiveKeyset:member(1)",
              "docComment": "/**\n * Choose a keyset to activate based on the lowest input fee\n *\n * Note: this function will filter out deprecated base64 keysets\n *\n * @param keysets - keysets to choose from\n *\n * @returns active keyset\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getActiveKeyset(keysets: "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "MintKeyset",
                  "canonicalReference": "@cashu/cashu-ts!MintKeyset:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "MintKeyset",
                  "canonicalReference": "@cashu/cashu-ts!MintKeyset:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "keysets",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getActiveKeyset"
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!CashuWallet#getAllKeys:member(1)",
              "docComment": "/**\n * Get all active keys from the mint and set the keyset with the lowest fees as the active wallet keyset.\n *\n * @returns keyset\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getAllKeys(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "MintKeys",
                  "canonicalReference": "@cashu/cashu-ts!MintKeys:type"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getAllKeys"
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!CashuWallet#getFeesForKeyset:member(1)",
              "docComment": "/**\n * calculates the fees based on inputs for a given keyset\n *\n * @param nInputs - number of inputs\n *\n * @param keysetId - keysetId used to lookup `input_fee_ppk`\n *\n * @returns fee amount\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getFeesForKeyset(nInputs: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", keysetId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "nInputs",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "keysetId",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getFeesForKeyset"
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!CashuWallet#getFeesForProofs:member(1)",
              "docComment": "/**\n * calculates the fees based on inputs (proofs)\n *\n * @param proofs - input proofs to calculate fees for\n *\n * @returns fee amount\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getFeesForProofs(proofs: "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Proof",
                  "canonicalReference": "@cashu/cashu-ts!Proof:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "proofs",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getFeesForProofs"
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!CashuWallet#getKeys:member(1)",
              "docComment": "/**\n * Get public keys from the mint. If keys were already fetched, it will return those.\n *\n * If `keysetId` is set, it will fetch and return that specific keyset. Otherwise, we select an active keyset with the unit of the wallet.\n *\n * @param keysetId - optional keysetId to get keys for\n *\n * @param forceRefresh - ? if set to true, it will force refresh the keyset from the mint\n *\n * @returns keyset\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getKeys(keysetId?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", forceRefresh?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "MintKeys",
                  "canonicalReference": "@cashu/cashu-ts!MintKeys:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "keysetId",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "forceRefresh",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getKeys"
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!CashuWallet#getKeySets:member(1)",
              "docComment": "/**\n * Get keysets from the mint with the unit of the wallet\n *\n * @returns keysets with wallet's unit\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getKeySets(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "MintKeyset",
                  "canonicalReference": "@cashu/cashu-ts!MintKeyset:type"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getKeySets"
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!CashuWallet#getMintInfo:member(1)",
              "docComment": "/**\n * Get information about the mint\n *\n * @returns mint info\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getMintInfo(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "MintInfo",
                  "canonicalReference": "@cashu/cashu-ts!~MintInfo:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getMintInfo"
            },
            {
              "kind": "Property",
              "canonicalReference": "@cashu/cashu-ts!CashuWallet#keys:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get keys(): "
                },
                {
                  "kind": "Reference",
                  "text": "Map",
                  "canonicalReference": "!Map:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string, "
                },
                {
                  "kind": "Reference",
                  "text": "MintKeys",
                  "canonicalReference": "@cashu/cashu-ts!MintKeys:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "keys",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@cashu/cashu-ts!CashuWallet#keysetId:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get keysetId(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";\n\nset keysetId(keysetId: string);"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "keysetId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@cashu/cashu-ts!CashuWallet#keysets:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get keysets(): "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "MintKeyset",
                  "canonicalReference": "@cashu/cashu-ts!MintKeyset:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "keysets",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!CashuWallet#lazyGetMintInfo:member(1)",
              "docComment": "/**\n * Get stored information about the mint or request it if not loaded.\n *\n * @returns mint info\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "lazyGetMintInfo(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "MintInfo",
                  "canonicalReference": "@cashu/cashu-ts!~MintInfo:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "lazyGetMintInfo"
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!CashuWallet#loadMint:member(1)",
              "docComment": "/**\n * Load mint information, keysets and keys. This function can be called if no keysets are passed in the constructor\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "loadMint(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "loadMint"
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!CashuWallet#meltProofs:member(1)",
              "docComment": "/**\n * Melt proofs for a melt quote. proofsToSend must be at least amount+fee_reserve form the melt quote. This function does not perform coin selection!. Returns melt quote and change proofs\n *\n * @param meltQuote - ID of the melt quote\n *\n * @param proofsToSend - proofs to melt\n *\n * @param options - Optional parameters for configuring the Melting Proof operation\n *\n * @returns \n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "meltProofs(\n\t\tmeltQuote: "
                },
                {
                  "kind": "Reference",
                  "text": "MeltQuoteResponse",
                  "canonicalReference": "@cashu/cashu-ts!MeltQuoteResponse:type"
                },
                {
                  "kind": "Content",
                  "text": ",\n\t\tproofsToSend: "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Proof",
                  "canonicalReference": "@cashu/cashu-ts!Proof:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ",\n\t\toptions?: "
                },
                {
                  "kind": "Reference",
                  "text": "MeltProofOptions",
                  "canonicalReference": "@cashu/cashu-ts!MeltProofOptions:type"
                },
                {
                  "kind": "Content",
                  "text": "\n\t): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "MeltProofsResponse",
                  "canonicalReference": "@cashu/cashu-ts!MeltProofsResponse:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 14
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "meltQuote",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "proofsToSend",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 7
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "meltProofs"
            },
            {
              "kind": "Property",
              "canonicalReference": "@cashu/cashu-ts!CashuWallet#mint:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mint: "
                },
                {
                  "kind": "Reference",
                  "text": "CashuMint",
                  "canonicalReference": "@cashu/cashu-ts!CashuMint:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "mint",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@cashu/cashu-ts!CashuWallet#mintInfo:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get mintInfo(): "
                },
                {
                  "kind": "Reference",
                  "text": "MintInfo",
                  "canonicalReference": "@cashu/cashu-ts!~MintInfo:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "mintInfo",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!CashuWallet#mintProofs:member(1)",
              "docComment": "/**\n * Mint proofs for a given mint quote\n *\n * @param amount - amount to request\n *\n * @param quote - ID of mint quote (when quote is a string)\n *\n * @param quote - containing the quote ID and unlocking private key (when quote is a LockedMintQuote)\n *\n * @param options - Optional parameters for configuring the Mint Proof operation\n *\n * @returns proofs\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mintProofs(\n\t\tamount: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ",\n\t\tquote: "
                },
                {
                  "kind": "Reference",
                  "text": "MintQuoteResponse",
                  "canonicalReference": "@cashu/cashu-ts!MintQuoteResponse:type"
                },
                {
                  "kind": "Content",
                  "text": ",\n\t\toptions: "
                },
                {
                  "kind": "Reference",
                  "text": "MintProofOptions",
                  "canonicalReference": "@cashu/cashu-ts!MintProofOptions:type"
                },
                {
                  "kind": "Content",
                  "text": " & {\n\t\t\tprivateKey: string;\n\t\t}"
                },
                {
                  "kind": "Content",
                  "text": "\n\t): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Proof",
                  "canonicalReference": "@cashu/cashu-ts!Proof:type"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 14
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "amount",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "quote",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mintProofs"
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!CashuWallet#mintProofs:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mintProofs(amount: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", quote: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "MintProofOptions",
                  "canonicalReference": "@cashu/cashu-ts!MintProofOptions:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Proof",
                  "canonicalReference": "@cashu/cashu-ts!Proof:type"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "amount",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "quote",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mintProofs"
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!CashuWallet#onMeltQuotePaid:member(1)",
              "docComment": "/**\n * Register a callback to be called whenever a melt quote's state changes\n *\n * @param quoteIds - List of melt quote IDs that should be subscribed to\n *\n * @param callback - Callback function that will be called whenever a melt quote state changes\n *\n * @param errorCallback - \n *\n * @returns \n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onMeltQuotePaid(\n\t\tquoteId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ",\n\t\tcallback: "
                },
                {
                  "kind": "Content",
                  "text": "(payload: "
                },
                {
                  "kind": "Reference",
                  "text": "MeltQuoteResponse",
                  "canonicalReference": "@cashu/cashu-ts!MeltQuoteResponse:type"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": ",\n\t\terrorCallback: "
                },
                {
                  "kind": "Content",
                  "text": "(e: "
                },
                {
                  "kind": "Reference",
                  "text": "Error",
                  "canonicalReference": "!Error:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": "\n\t): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SubscriptionCanceller",
                  "canonicalReference": "@cashu/cashu-ts!~SubscriptionCanceller:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 15
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "quoteId",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "errorCallback",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 10
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "onMeltQuotePaid"
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!CashuWallet#onMeltQuoteUpdates:member(1)",
              "docComment": "/**\n * Register a callback to be called when a single melt quote gets paid\n *\n * @param quoteId - Melt quote id that should be subscribed to\n *\n * @param callback - Callback function that will be called when this melt quote gets paid\n *\n * @param errorCallback - \n *\n * @returns \n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onMeltQuoteUpdates(\n\t\tquoteIds: "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string>"
                },
                {
                  "kind": "Content",
                  "text": ",\n\t\tcallback: "
                },
                {
                  "kind": "Content",
                  "text": "(payload: "
                },
                {
                  "kind": "Reference",
                  "text": "MeltQuoteResponse",
                  "canonicalReference": "@cashu/cashu-ts!MeltQuoteResponse:type"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": ",\n\t\terrorCallback: "
                },
                {
                  "kind": "Content",
                  "text": "(e: "
                },
                {
                  "kind": "Reference",
                  "text": "Error",
                  "canonicalReference": "!Error:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": "\n\t): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SubscriptionCanceller",
                  "canonicalReference": "@cashu/cashu-ts!~SubscriptionCanceller:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 12,
                "endIndex": 16
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "quoteIds",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 7
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "errorCallback",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 11
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "onMeltQuoteUpdates"
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!CashuWallet#onMintQuotePaid:member(1)",
              "docComment": "/**\n * Register a callback to be called when a single mint quote gets paid\n *\n * @param quoteId - Mint quote id that should be subscribed to\n *\n * @param callback - Callback function that will be called when this mint quote gets paid\n *\n * @param errorCallback - \n *\n * @returns \n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onMintQuotePaid(\n\t\tquoteId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ",\n\t\tcallback: "
                },
                {
                  "kind": "Content",
                  "text": "(payload: "
                },
                {
                  "kind": "Reference",
                  "text": "MintQuoteResponse",
                  "canonicalReference": "@cashu/cashu-ts!MintQuoteResponse:type"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": ",\n\t\terrorCallback: "
                },
                {
                  "kind": "Content",
                  "text": "(e: "
                },
                {
                  "kind": "Reference",
                  "text": "Error",
                  "canonicalReference": "!Error:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": "\n\t): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SubscriptionCanceller",
                  "canonicalReference": "@cashu/cashu-ts!~SubscriptionCanceller:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 15
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "quoteId",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "errorCallback",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 10
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "onMintQuotePaid"
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!CashuWallet#onMintQuoteUpdates:member(1)",
              "docComment": "/**\n * Register a callback to be called whenever a mint quote's state changes\n *\n * @param quoteIds - List of mint quote IDs that should be subscribed to\n *\n * @param callback - Callback function that will be called whenever a mint quote state changes\n *\n * @param errorCallback - \n *\n * @returns \n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onMintQuoteUpdates(\n\t\tquoteIds: "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string>"
                },
                {
                  "kind": "Content",
                  "text": ",\n\t\tcallback: "
                },
                {
                  "kind": "Content",
                  "text": "(payload: "
                },
                {
                  "kind": "Reference",
                  "text": "MintQuoteResponse",
                  "canonicalReference": "@cashu/cashu-ts!MintQuoteResponse:type"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": ",\n\t\terrorCallback: "
                },
                {
                  "kind": "Content",
                  "text": "(e: "
                },
                {
                  "kind": "Reference",
                  "text": "Error",
                  "canonicalReference": "!Error:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": "\n\t): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SubscriptionCanceller",
                  "canonicalReference": "@cashu/cashu-ts!~SubscriptionCanceller:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 12,
                "endIndex": 16
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "quoteIds",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 7
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "errorCallback",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 11
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "onMintQuoteUpdates"
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!CashuWallet#onProofStateUpdates:member(1)",
              "docComment": "/**\n * Register a callback to be called whenever a subscribed proof state changes\n *\n * @param proofs - List of proofs that should be subscribed to\n *\n * @param callback - Callback function that will be called whenever a proof's state changes\n *\n * @param errorCallback - \n *\n * @returns \n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onProofStateUpdates(\n\t\tproofs: "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Proof",
                  "canonicalReference": "@cashu/cashu-ts!Proof:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ",\n\t\tcallback: "
                },
                {
                  "kind": "Content",
                  "text": "(\n\t\t\tpayload: "
                },
                {
                  "kind": "Reference",
                  "text": "ProofState",
                  "canonicalReference": "@cashu/cashu-ts!ProofState:type"
                },
                {
                  "kind": "Content",
                  "text": " & {\n\t\t\t\tproof: "
                },
                {
                  "kind": "Reference",
                  "text": "Proof",
                  "canonicalReference": "@cashu/cashu-ts!Proof:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n\t\t\t}\n\t\t) => void"
                },
                {
                  "kind": "Content",
                  "text": ",\n\t\terrorCallback: "
                },
                {
                  "kind": "Content",
                  "text": "(e: "
                },
                {
                  "kind": "Reference",
                  "text": "Error",
                  "canonicalReference": "!Error:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": "\n\t): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SubscriptionCanceller",
                  "canonicalReference": "@cashu/cashu-ts!~SubscriptionCanceller:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 16,
                "endIndex": 20
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "proofs",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 11
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "errorCallback",
                  "parameterTypeTokenRange": {
                    "startIndex": 12,
                    "endIndex": 15
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "onProofStateUpdates"
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!CashuWallet#receive:member(1)",
              "docComment": "/**\n * Receive an encoded or raw Cashu token (only supports single tokens. It will only process the first token in the token array)\n *\n * @param token - Cashu token, either as string or decoded\n *\n * @param options - Optional configuration for token processing\n *\n * @returns New token with newly created proofs, token entries that had errors\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "receive(token: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "Token",
                  "canonicalReference": "@cashu/cashu-ts!Token:type"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "ReceiveOptions",
                  "canonicalReference": "@cashu/cashu-ts!ReceiveOptions:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Proof",
                  "canonicalReference": "@cashu/cashu-ts!Proof:type"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "token",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "receive"
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!CashuWallet#restore:member(1)",
              "docComment": "/**\n * Regenerates\n *\n * @param start - set starting point for count (first cycle for each keyset should usually be 0)\n *\n * @param count - set number of blinded messages that should be generated\n *\n * @param  - options.keysetId set a custom keysetId to restore from. keysetIds can be loaded with `CashuMint.getKeySets()`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "restore(\n\t\tstart: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ",\n\t\tcount: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ",\n\t\toptions?: "
                },
                {
                  "kind": "Reference",
                  "text": "RestoreOptions",
                  "canonicalReference": "@cashu/cashu-ts!RestoreOptions:type"
                },
                {
                  "kind": "Content",
                  "text": "\n\t): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<{\n\t\tproofs: "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Proof",
                  "canonicalReference": "@cashu/cashu-ts!Proof:type"
                },
                {
                  "kind": "Content",
                  "text": ">;\n\t\tlastCounterWithSignature?: number;\n\t}>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "start",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "count",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "restore"
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!CashuWallet#selectProofsToSend:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "selectProofsToSend(\n\t\tproofs: "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Proof",
                  "canonicalReference": "@cashu/cashu-ts!Proof:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ",\n\t\tamountToSend: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ",\n\t\tincludeFees?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "\n\t): "
                },
                {
                  "kind": "Reference",
                  "text": "SendResponse",
                  "canonicalReference": "@cashu/cashu-ts!SendResponse:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "proofs",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "amountToSend",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "includeFees",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "selectProofsToSend"
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!CashuWallet#send:member(1)",
              "docComment": "/**\n * Send proofs of a given amount, by providing at least the required amount of proofs\n *\n * @param amount - amount to send\n *\n * @param proofs - array of proofs (accumulated amount of proofs must be >= than amount)\n *\n * @param options - Optional parameters for configuring the send operation\n *\n * @returns {SendResponse}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "send(amount: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", proofs: "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Proof",
                  "canonicalReference": "@cashu/cashu-ts!Proof:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "SendOptions",
                  "canonicalReference": "@cashu/cashu-ts!SendOptions:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SendResponse",
                  "canonicalReference": "@cashu/cashu-ts!SendResponse:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 14
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "amount",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "proofs",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 7
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "send"
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!CashuWallet#swap:member(1)",
              "docComment": "/**\n * Splits and creates sendable tokens if no amount is specified, the amount is implied by the cumulative amount of all proofs if both amount and preference are set, but the preference cannot fulfill the amount, then we use the default split\n *\n * @param options - Optional parameters for configuring the swap operation\n *\n * @returns promise of the change- and send-proofs\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "swap(amount: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", proofs: "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Proof",
                  "canonicalReference": "@cashu/cashu-ts!Proof:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "SwapOptions",
                  "canonicalReference": "@cashu/cashu-ts!SwapOptions:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SendResponse",
                  "canonicalReference": "@cashu/cashu-ts!SendResponse:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 14
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "amount",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "proofs",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 7
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "swap"
            },
            {
              "kind": "Property",
              "canonicalReference": "@cashu/cashu-ts!CashuWallet#unit:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get unit(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "unit",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cashu/cashu-ts!CheckStateEnum:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CheckStateEnum = "
            },
            {
              "kind": "Content",
              "text": "(typeof "
            },
            {
              "kind": "Reference",
              "text": "CheckStateEnum",
              "canonicalReference": "@cashu/cashu-ts!CheckStateEnum:var"
            },
            {
              "kind": "Content",
              "text": ")[keyof typeof "
            },
            {
              "kind": "Reference",
              "text": "CheckStateEnum",
              "canonicalReference": "@cashu/cashu-ts!CheckStateEnum:var"
            },
            {
              "kind": "Content",
              "text": "]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/model/types/mint/responses.d.ts",
          "releaseTag": "Public",
          "name": "CheckStateEnum",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@cashu/cashu-ts!CheckStateEnum:var",
          "docComment": "/**\n * Enum for the state of a proof\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "CheckStateEnum: "
            },
            {
              "kind": "Content",
              "text": "{\n\treadonly UNSPENT: 'UNSPENT';\n\treadonly PENDING: 'PENDING';\n\treadonly SPENT: 'SPENT';\n}"
            }
          ],
          "fileUrlPath": "lib/types/model/types/mint/responses.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "CheckStateEnum",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cashu/cashu-ts!CheckStatePayload:type",
          "docComment": "/**\n * Payload that needs to be sent to the mint when checking for spendable proofs\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CheckStatePayload = "
            },
            {
              "kind": "Content",
              "text": "{\n\tYs: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<string>;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/model/types/mint/index.d.ts",
          "releaseTag": "Public",
          "name": "CheckStatePayload",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cashu/cashu-ts!CheckStateResponse:type",
          "docComment": "/**\n * Response when checking proofs if they are spendable. Should not rely on this for receiving, since it can be easily cheated.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CheckStateResponse = "
            },
            {
              "kind": "Content",
              "text": "{\n\tstates: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ProofState",
              "canonicalReference": "@cashu/cashu-ts!ProofState:type"
            },
            {
              "kind": "Content",
              "text": ">;\n} & "
            },
            {
              "kind": "Reference",
              "text": "ApiError",
              "canonicalReference": "@cashu/cashu-ts!ApiError:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/model/types/mint/responses.d.ts",
          "releaseTag": "Public",
          "name": "CheckStateResponse",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@cashu/cashu-ts!decodePaymentRequest:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function decodePaymentRequest(paymentRequest: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "PaymentRequest",
              "canonicalReference": "@cashu/cashu-ts!PaymentRequest_2:class"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/utils.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "paymentRequest",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "decodePaymentRequest"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cashu/cashu-ts!DeprecatedToken:type",
          "docComment": "/**\n * A Cashu token\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DeprecatedToken = "
            },
            {
              "kind": "Content",
              "text": "{\n\ttoken: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TokenEntry",
              "canonicalReference": "@cashu/cashu-ts!~TokenEntry:type"
            },
            {
              "kind": "Content",
              "text": ">;\n\tmemo?: string;\n\tunit?: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/model/types/wallet/tokens.d.ts",
          "releaseTag": "Public",
          "name": "DeprecatedToken",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@cashu/cashu-ts!deriveKeysetId:function(1)",
          "docComment": "/**\n * Returns the keyset id of a set of keys\n *\n * @param keys - keys object to derive keyset id from\n *\n * @returns \n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function deriveKeysetId(keys: "
            },
            {
              "kind": "Reference",
              "text": "Keys",
              "canonicalReference": "@cashu/cashu-ts!Keys:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/utils.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "keys",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "deriveKeysetId"
        },
        {
          "kind": "Function",
          "canonicalReference": "@cashu/cashu-ts!getBlindedAuthToken:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getBlindedAuthToken(\n\tamount: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ",\n\turl: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ",\n\tclearAuthToken: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "\n): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<string[]>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/auth/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "amount",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "url",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "clearAuthToken",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false
            }
          ],
          "name": "getBlindedAuthToken"
        },
        {
          "kind": "Function",
          "canonicalReference": "@cashu/cashu-ts!getDecodedToken:function(1)",
          "docComment": "/**\n * Helper function to decode cashu tokens into object\n *\n * @param token - an encoded cashu token (cashuAey...)\n *\n * @returns cashu token object\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getDecodedToken(token: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Token",
              "canonicalReference": "@cashu/cashu-ts!Token:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/utils.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "token",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "getDecodedToken"
        },
        {
          "kind": "Function",
          "canonicalReference": "@cashu/cashu-ts!getDecodedTokenBinary:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getDecodedTokenBinary(bytes: "
            },
            {
              "kind": "Reference",
              "text": "Uint8Array",
              "canonicalReference": "!Uint8Array:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Token",
              "canonicalReference": "@cashu/cashu-ts!Token:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/utils.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "bytes",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "getDecodedTokenBinary"
        },
        {
          "kind": "Function",
          "canonicalReference": "@cashu/cashu-ts!getEncodedAuthToken:function(1)",
          "docComment": "/**\n * Helper function to encode a cashu auth token authA\n *\n * @param proof - \n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getEncodedAuthToken(proof: "
            },
            {
              "kind": "Reference",
              "text": "Proof",
              "canonicalReference": "@cashu/cashu-ts!Proof:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/auth/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "proof",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "getEncodedAuthToken"
        },
        {
          "kind": "Function",
          "canonicalReference": "@cashu/cashu-ts!getEncodedToken:function(1)",
          "docComment": "/**\n * Helper function to encode a cashu token (defaults to v4 if keyset id allows it)\n *\n * @param token - \n *\n * @param opts - \n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getEncodedToken(\n\ttoken: "
            },
            {
              "kind": "Reference",
              "text": "Token",
              "canonicalReference": "@cashu/cashu-ts!Token:type"
            },
            {
              "kind": "Content",
              "text": ",\n\topts?: "
            },
            {
              "kind": "Content",
              "text": "{\n\t\tversion: 3 | 4;\n\t}"
            },
            {
              "kind": "Content",
              "text": "\n): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/utils.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "token",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "opts",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            }
          ],
          "name": "getEncodedToken"
        },
        {
          "kind": "Function",
          "canonicalReference": "@cashu/cashu-ts!getEncodedTokenBinary:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getEncodedTokenBinary(token: "
            },
            {
              "kind": "Reference",
              "text": "Token",
              "canonicalReference": "@cashu/cashu-ts!Token:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Uint8Array",
              "canonicalReference": "!Uint8Array:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/utils.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "token",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "getEncodedTokenBinary"
        },
        {
          "kind": "Function",
          "canonicalReference": "@cashu/cashu-ts!getEncodedTokenV4:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getEncodedTokenV4(token: "
            },
            {
              "kind": "Reference",
              "text": "Token",
              "canonicalReference": "@cashu/cashu-ts!Token:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/utils.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "token",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "getEncodedTokenV4"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cashu/cashu-ts!GetInfoResponse:type",
          "docComment": "/**\n * Response from mint at /info endpoint\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type GetInfoResponse = "
            },
            {
              "kind": "Content",
              "text": "{\n\tname: string;\n\tpubkey: string;\n\tversion: string;\n\tdescription?: string;\n\tdescription_long?: string;\n\ticon_url?: string;\n\tcontact: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "MintContactInfo",
              "canonicalReference": "@cashu/cashu-ts!MintContactInfo:type"
            },
            {
              "kind": "Content",
              "text": ">;\n\tnuts: {\n\t\t'4': {\n\t\t\tmethods: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "SwapMethod",
              "canonicalReference": "@cashu/cashu-ts!SwapMethod:type"
            },
            {
              "kind": "Content",
              "text": ">;\n\t\t\tdisabled: boolean;\n\t\t};\n\t\t'5': {\n\t\t\tmethods: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "SwapMethod",
              "canonicalReference": "@cashu/cashu-ts!SwapMethod:type"
            },
            {
              "kind": "Content",
              "text": ">;\n\t\t\tdisabled: boolean;\n\t\t};\n\t\t'7'?: {\n\t\t\tsupported: boolean;\n\t\t};\n\t\t'8'?: {\n\t\t\tsupported: boolean;\n\t\t};\n\t\t'9'?: {\n\t\t\tsupported: boolean;\n\t\t};\n\t\t'10'?: {\n\t\t\tsupported: boolean;\n\t\t};\n\t\t'11'?: {\n\t\t\tsupported: boolean;\n\t\t};\n\t\t'12'?: {\n\t\t\tsupported: boolean;\n\t\t};\n\t\t'14'?: {\n\t\t\tsupported: boolean;\n\t\t};\n\t\t'15'?: {\n\t\t\tmethods: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "MPPMethod",
              "canonicalReference": "@cashu/cashu-ts!MPPMethod:type"
            },
            {
              "kind": "Content",
              "text": ">;\n\t\t};\n\t\t'17'?: {\n\t\t\tsupported: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "WebSocketSupport",
              "canonicalReference": "@cashu/cashu-ts!WebSocketSupport:type"
            },
            {
              "kind": "Content",
              "text": ">;\n\t\t};\n\t\t'20'?: {\n\t\t\tsupported: boolean;\n\t\t};\n\t\t'22'?: {\n\t\t\tbat_max_mint: number;\n\t\t\tprotected_endpoints: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<{\n\t\t\t\tmethod: 'GET' | 'POST';\n\t\t\t\tpath: string;\n\t\t\t}>;\n\t\t};\n\t};\n\tmotd?: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/model/types/mint/responses.d.ts",
          "releaseTag": "Public",
          "name": "GetInfoResponse",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 24
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@cashu/cashu-ts!getP2PKExpectedKWitnessPubkeys:function(1)",
          "docComment": "/**\n * Returns the expected witness public keys from a NUT-11 P2PK secret\n *\n * @param secretStr - The NUT-11 P2PK secret.\n *\n * @returns {array} with the public keys or empty array\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getP2PKExpectedKWitnessPubkeys(secretStr: "
            },
            {
              "kind": "Content",
              "text": "string | "
            },
            {
              "kind": "Reference",
              "text": "Secret",
              "canonicalReference": "@cashu/cashu-ts!~Secret:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<string>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/crypto/client/NUT11.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 4,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "secretStr",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isOptional": false
            }
          ],
          "name": "getP2PKExpectedKWitnessPubkeys"
        },
        {
          "kind": "Function",
          "canonicalReference": "@cashu/cashu-ts!getP2PKLocktime:function(1)",
          "docComment": "/**\n * Returns the locktime from a NUT-11 P2PK secret or Infinity if no locktime\n *\n * @param secretStr - The NUT-11 P2PK secret.\n *\n * @returns {number} The locktime unix timestamp or Infinity (permanent lock)\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getP2PKLocktime(secretStr: "
            },
            {
              "kind": "Content",
              "text": "string | "
            },
            {
              "kind": "Reference",
              "text": "Secret",
              "canonicalReference": "@cashu/cashu-ts!~Secret:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/crypto/client/NUT11.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 4,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "secretStr",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isOptional": false
            }
          ],
          "name": "getP2PKLocktime"
        },
        {
          "kind": "Function",
          "canonicalReference": "@cashu/cashu-ts!getP2PKNSigs:function(1)",
          "docComment": "/**\n * Returns the number of signatures required from a NUT-11 P2PK secret\n *\n * @param secretStr - The NUT-11 P2PK secret.\n *\n * @returns {number} The number of signatories (n_sigs / n_sigs_refund) or 0 if secret is unlocked\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getP2PKNSigs(secretStr: "
            },
            {
              "kind": "Content",
              "text": "string | "
            },
            {
              "kind": "Reference",
              "text": "Secret",
              "canonicalReference": "@cashu/cashu-ts!~Secret:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/crypto/client/NUT11.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 4,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "secretStr",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isOptional": false
            }
          ],
          "name": "getP2PKNSigs"
        },
        {
          "kind": "Function",
          "canonicalReference": "@cashu/cashu-ts!getP2PKSigFlag:function(1)",
          "docComment": "/**\n * Returns the sigflag from a NUT-11 P2PK secret\n *\n * @param secretStr - The NUT-11 P2PK secret.\n *\n * @returns {string} The sigflag or 'SIG_INPUTS' (default)\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getP2PKSigFlag(secretStr: "
            },
            {
              "kind": "Content",
              "text": "string | "
            },
            {
              "kind": "Reference",
              "text": "Secret",
              "canonicalReference": "@cashu/cashu-ts!~Secret:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/crypto/client/NUT11.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 4,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "secretStr",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isOptional": false
            }
          ],
          "name": "getP2PKSigFlag"
        },
        {
          "kind": "Function",
          "canonicalReference": "@cashu/cashu-ts!getP2PKWitnessSignatures:function(1)",
          "docComment": "/**\n * Gets witness signatures as an array  @type {array} of signatures\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "getP2PKWitnessSignatures: (\n\twitness: "
            },
            {
              "kind": "Content",
              "text": "string | "
            },
            {
              "kind": "Reference",
              "text": "P2PKWitness",
              "canonicalReference": "@cashu/cashu-ts!P2PKWitness:type"
            },
            {
              "kind": "Content",
              "text": " | undefined"
            },
            {
              "kind": "Content",
              "text": "\n) => "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<string>"
            }
          ],
          "fileUrlPath": "lib/types/crypto/client/NUT11.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 7
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "witness",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "getP2PKWitnessSignatures"
        },
        {
          "kind": "Function",
          "canonicalReference": "@cashu/cashu-ts!hasP2PKSignedProof:function(1)",
          "docComment": "/**\n * Verifies a pubkey has signed a P2PK Proof.\n *\n * @param pubkey - The Cashu P2PK public key (hex-encoded, X-only or with 02/03 prefix).\n *\n * @param proof - A Cashu proof\n *\n * @returns {boolean} True if one of the signatures is theirs, false otherwise\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "hasP2PKSignedProof: (pubkey: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", proof: "
            },
            {
              "kind": "Reference",
              "text": "Proof",
              "canonicalReference": "@cashu/cashu-ts!Proof:type"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Content",
              "text": "boolean"
            }
          ],
          "fileUrlPath": "lib/types/crypto/client/NUT11.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "pubkey",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "proof",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "hasP2PKSignedProof"
        },
        {
          "kind": "Function",
          "canonicalReference": "@cashu/cashu-ts!hasValidDleq:function(1)",
          "docComment": "/**\n * Checks that the proof has a valid DLEQ proof according to keyset `keys`\n *\n * @param proof - The proof subject to verification\n *\n * @param keyset - The Mint's keyset to be used for verification\n *\n * @param proof - does not match any key in\n *\n * @param keyset - \n *\n * @returns true if verification succeeded, false otherwise\n *\n * @throws\n *\n * Error if\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function hasValidDleq(proof: "
            },
            {
              "kind": "Reference",
              "text": "Proof",
              "canonicalReference": "@cashu/cashu-ts!Proof:type"
            },
            {
              "kind": "Content",
              "text": ", keyset: "
            },
            {
              "kind": "Reference",
              "text": "MintKeys",
              "canonicalReference": "@cashu/cashu-ts!MintKeys:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/utils.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "proof",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "keyset",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "hasValidDleq"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cashu/cashu-ts!HTLCWitness:type",
          "docComment": "/**\n * HTLC witness\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type HTLCWitness = "
            },
            {
              "kind": "Content",
              "text": "{\n\tpreimage: string;\n\tsignatures?: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<string>;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/model/types/wallet/index.d.ts",
          "releaseTag": "Public",
          "name": "HTLCWitness",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@cashu/cashu-ts!HttpResponseError:class",
          "docComment": "/**\n * This error is thrown when a HTTP response is not 2XX nor a protocol error.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class HttpResponseError extends "
            },
            {
              "kind": "Reference",
              "text": "Error",
              "canonicalReference": "!Error:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "lib/types/model/Errors.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "HttpResponseError",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@cashu/cashu-ts!HttpResponseError:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `HttpResponseError` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(message: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", status: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "status",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@cashu/cashu-ts!HttpResponseError#status:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "status: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "status",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@cashu/cashu-ts!injectWebSocketImpl:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function injectWebSocketImpl(ws: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/ws.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "ws",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "injectWebSocketImpl"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cashu/cashu-ts!InvoiceData:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type InvoiceData = "
            },
            {
              "kind": "Content",
              "text": "{\n\tpaymentRequest: string;\n\tamountInSats?: number;\n\tamountInMSats?: number;\n\ttimestamp?: number;\n\tpaymentHash?: string;\n\tmemo?: string;\n\texpiry?: number;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/model/types/index.d.ts",
          "releaseTag": "Public",
          "name": "InvoiceData",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cashu/cashu-ts!JsonRpcErrorObject:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type JsonRpcErrorObject = "
            },
            {
              "kind": "Content",
              "text": "{\n\tcode: number;\n\tmessage: string;\n\tdata?: any;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/model/types/index.d.ts",
          "releaseTag": "Public",
          "name": "JsonRpcErrorObject",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cashu/cashu-ts!JsonRpcMessage:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type JsonRpcMessage = "
            },
            {
              "kind": "Reference",
              "text": "JsonRpcRequest",
              "canonicalReference": "@cashu/cashu-ts!~JsonRpcRequest:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "JsonRpcNotification",
              "canonicalReference": "@cashu/cashu-ts!JsonRpcNotification:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "JsonRpcSuccess",
              "canonicalReference": "@cashu/cashu-ts!~JsonRpcSuccess:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "JsonRpcError",
              "canonicalReference": "@cashu/cashu-ts!~JsonRpcError:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/model/types/index.d.ts",
          "releaseTag": "Public",
          "name": "JsonRpcMessage",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cashu/cashu-ts!JsonRpcNotification:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type JsonRpcNotification = "
            },
            {
              "kind": "Content",
              "text": "{\n\tjsonrpc: '2.0';\n\tmethod: string;\n\tparams?: "
            },
            {
              "kind": "Reference",
              "text": "JsonRpcParams",
              "canonicalReference": "@cashu/cashu-ts!~JsonRpcParams:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/model/types/index.d.ts",
          "releaseTag": "Public",
          "name": "JsonRpcNotification",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cashu/cashu-ts!JsonRpcReqParams:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type JsonRpcReqParams = "
            },
            {
              "kind": "Content",
              "text": "{\n\tkind: "
            },
            {
              "kind": "Reference",
              "text": "RpcSubKinds",
              "canonicalReference": "@cashu/cashu-ts!~RpcSubKinds:type"
            },
            {
              "kind": "Content",
              "text": ";\n\tfilters: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<string>;\n\tsubId: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/model/types/index.d.ts",
          "releaseTag": "Public",
          "name": "JsonRpcReqParams",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cashu/cashu-ts!Keys:type",
          "docComment": "/**\n * Public keys are a dictionary of number and string. The number represents the amount that the key signs for.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type Keys = "
            },
            {
              "kind": "Content",
              "text": "{\n\t[amount: number]: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/model/types/mint/keys.d.ts",
          "releaseTag": "Public",
          "name": "Keys",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cashu/cashu-ts!LockedMintQuote:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type LockedMintQuote = "
            },
            {
              "kind": "Content",
              "text": "{\n\tid: string;\n\tprivkey: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/model/types/index.d.ts",
          "releaseTag": "Public",
          "name": "LockedMintQuote",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cashu/cashu-ts!LockedMintQuoteResponse:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type LockedMintQuoteResponse = "
            },
            {
              "kind": "Reference",
              "text": "MintQuoteResponse",
              "canonicalReference": "@cashu/cashu-ts!MintQuoteResponse:type"
            },
            {
              "kind": "Content",
              "text": " & {\n\tpubkey: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/model/types/mint/responses.d.ts",
          "releaseTag": "Public",
          "name": "LockedMintQuoteResponse",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cashu/cashu-ts!MeltPayload:type",
          "docComment": "/**\n * Payload that needs to be sent to the mint when melting. Includes Return for overpaid fees\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type MeltPayload = "
            },
            {
              "kind": "Content",
              "text": "{\n\tquote: string;\n\tinputs: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Proof",
              "canonicalReference": "@cashu/cashu-ts!Proof:type"
            },
            {
              "kind": "Content",
              "text": ">;\n\toutputs: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "SerializedBlindedMessage",
              "canonicalReference": "@cashu/cashu-ts!SerializedBlindedMessage:type"
            },
            {
              "kind": "Content",
              "text": ">;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/model/types/wallet/payloads.d.ts",
          "releaseTag": "Public",
          "name": "MeltPayload",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 10
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cashu/cashu-ts!MeltProofOptions:type",
          "docComment": "/**\n * @param options - Optional parameters for configuring the Melting Proof operation: - `keysetId`: override the keysetId derived from the current mintKeys with a custom one. This should be a keyset that was fetched from the `/keysets` endpoint - `counter`: optionally set counter to derive secret deterministically. CashuWallet class must be initialized with seed phrase to take effect - `privkey`: will create a signature on the proofs secrets if set\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type MeltProofOptions = "
            },
            {
              "kind": "Content",
              "text": "{\n\tkeysetId?: string;\n\tcounter?: number;\n\tprivkey?: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/model/types/index.d.ts",
          "releaseTag": "Public",
          "name": "MeltProofOptions",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cashu/cashu-ts!MeltProofsResponse:type",
          "docComment": "/**\n * Response after paying a Lightning invoice\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type MeltProofsResponse = "
            },
            {
              "kind": "Content",
              "text": "{\n\tquote: "
            },
            {
              "kind": "Reference",
              "text": "MeltQuoteResponse",
              "canonicalReference": "@cashu/cashu-ts!MeltQuoteResponse:type"
            },
            {
              "kind": "Content",
              "text": ";\n\tchange: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Proof",
              "canonicalReference": "@cashu/cashu-ts!Proof:type"
            },
            {
              "kind": "Content",
              "text": ">;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/model/types/wallet/responses.d.ts",
          "releaseTag": "Public",
          "name": "MeltProofsResponse",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cashu/cashu-ts!MeltQuoteOptions:type",
          "docComment": "/**\n * Melt quote specific options\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type MeltQuoteOptions = "
            },
            {
              "kind": "Content",
              "text": "{\n\tmpp: "
            },
            {
              "kind": "Reference",
              "text": "MPPOption",
              "canonicalReference": "@cashu/cashu-ts!MPPOption:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/model/types/wallet/payloads.d.ts",
          "releaseTag": "Public",
          "name": "MeltQuoteOptions",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cashu/cashu-ts!MeltQuotePayload:type",
          "docComment": "/**\n * Payload that needs to be send to the mint to request a melt quote\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type MeltQuotePayload = "
            },
            {
              "kind": "Content",
              "text": "{\n\tunit: string;\n\trequest: string;\n\toptions?: "
            },
            {
              "kind": "Reference",
              "text": "MeltQuoteOptions",
              "canonicalReference": "@cashu/cashu-ts!MeltQuoteOptions:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/model/types/wallet/payloads.d.ts",
          "releaseTag": "Public",
          "name": "MeltQuotePayload",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cashu/cashu-ts!MeltQuoteResponse:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type MeltQuoteResponse = "
            },
            {
              "kind": "Reference",
              "text": "PartialMeltQuoteResponse",
              "canonicalReference": "@cashu/cashu-ts!PartialMeltQuoteResponse:type"
            },
            {
              "kind": "Content",
              "text": " & {\n\trequest: string;\n\tunit: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/model/types/mint/responses.d.ts",
          "releaseTag": "Public",
          "name": "MeltQuoteResponse",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cashu/cashu-ts!MeltQuoteState:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type MeltQuoteState = "
            },
            {
              "kind": "Content",
              "text": "(typeof "
            },
            {
              "kind": "Reference",
              "text": "MeltQuoteState",
              "canonicalReference": "@cashu/cashu-ts!MeltQuoteState:var"
            },
            {
              "kind": "Content",
              "text": ")[keyof typeof "
            },
            {
              "kind": "Reference",
              "text": "MeltQuoteState",
              "canonicalReference": "@cashu/cashu-ts!MeltQuoteState:var"
            },
            {
              "kind": "Content",
              "text": "]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/model/types/mint/responses.d.ts",
          "releaseTag": "Public",
          "name": "MeltQuoteState",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@cashu/cashu-ts!MeltQuoteState:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "MeltQuoteState: "
            },
            {
              "kind": "Content",
              "text": "{\n\treadonly UNPAID: 'UNPAID';\n\treadonly PENDING: 'PENDING';\n\treadonly PAID: 'PAID';\n}"
            }
          ],
          "fileUrlPath": "lib/types/model/types/mint/responses.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "MeltQuoteState",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cashu/cashu-ts!MintActiveKeys:type",
          "docComment": "/**\n * An array of mint keysets\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type MintActiveKeys = "
            },
            {
              "kind": "Content",
              "text": "{\n\tkeysets: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "MintKeys",
              "canonicalReference": "@cashu/cashu-ts!MintKeys:type"
            },
            {
              "kind": "Content",
              "text": ">;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/model/types/mint/keys.d.ts",
          "releaseTag": "Public",
          "name": "MintActiveKeys",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cashu/cashu-ts!MintAllKeysets:type",
          "docComment": "/**\n * An array of mint keyset entries.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type MintAllKeysets = "
            },
            {
              "kind": "Content",
              "text": "{\n\tkeysets: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "MintKeyset",
              "canonicalReference": "@cashu/cashu-ts!MintKeyset:type"
            },
            {
              "kind": "Content",
              "text": ">;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/model/types/mint/keys.d.ts",
          "releaseTag": "Public",
          "name": "MintAllKeysets",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cashu/cashu-ts!MintContactInfo:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type MintContactInfo = "
            },
            {
              "kind": "Content",
              "text": "{\n\tmethod: string;\n\tinfo: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/model/types/mint/responses.d.ts",
          "releaseTag": "Public",
          "name": "MintContactInfo",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cashu/cashu-ts!MintKeys:type",
          "docComment": "/**\n * A mint keyset.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type MintKeys = "
            },
            {
              "kind": "Content",
              "text": "{\n\tid: string;\n\tunit: string;\n\tkeys: "
            },
            {
              "kind": "Reference",
              "text": "Keys",
              "canonicalReference": "@cashu/cashu-ts!Keys:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/model/types/mint/keys.d.ts",
          "releaseTag": "Public",
          "name": "MintKeys",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cashu/cashu-ts!MintKeyset:type",
          "docComment": "/**\n * A mint keyset entry.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type MintKeyset = "
            },
            {
              "kind": "Content",
              "text": "{\n\tid: string;\n\tunit: string;\n\tactive: boolean;\n\tinput_fee_ppk?: number;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/model/types/mint/keys.d.ts",
          "releaseTag": "Public",
          "name": "MintKeyset",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@cashu/cashu-ts!MintOperationError:class",
          "docComment": "/**\n * This error is thrown when a [protocol error](https://github.com/cashubtc/nuts/blob/main/00.md#errors) occurs. See error codes [here](https://github.com/cashubtc/nuts/blob/main/error_codes.md).\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class MintOperationError extends "
            },
            {
              "kind": "Reference",
              "text": "HttpResponseError",
              "canonicalReference": "@cashu/cashu-ts!HttpResponseError:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "lib/types/model/Errors.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "MintOperationError",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@cashu/cashu-ts!MintOperationError:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `MintOperationError` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(code: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", detail: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "code",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "detail",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@cashu/cashu-ts!MintOperationError#code:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "code: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "code",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cashu/cashu-ts!MintPayload:type",
          "docComment": "/**\n * Payload that needs to be sent to the mint when requesting a mint\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type MintPayload = "
            },
            {
              "kind": "Content",
              "text": "{\n\tquote: string;\n\toutputs: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "SerializedBlindedMessage",
              "canonicalReference": "@cashu/cashu-ts!SerializedBlindedMessage:type"
            },
            {
              "kind": "Content",
              "text": ">;\n\tsignature?: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/model/types/wallet/payloads.d.ts",
          "releaseTag": "Public",
          "name": "MintPayload",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cashu/cashu-ts!MintProofOptions:type",
          "docComment": "/**\n * @param options - Optional parameters for configuring the Mint Proof operation: - `keysetId`: override the keysetId derived from the current mintKeys with a custom one. This should be a keyset that was fetched from the `/keysets` endpoint - `outputAmounts`: optionally specify the output's amounts to keep and to send. - `counter`: optionally set counter to derive secret deterministically. CashuWallet class must be initialized with seed phrase to take effect - `proofsWeHave`: optionally provide all currently stored proofs of this mint. Cashu-ts will use them to derive the optimal output amounts - `pubkey`: optionally locks ecash to pubkey. Will not be deterministic, even if counter is set!\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type MintProofOptions = "
            },
            {
              "kind": "Content",
              "text": "{\n\tkeysetId?: string;\n\toutputAmounts?: "
            },
            {
              "kind": "Reference",
              "text": "OutputAmounts",
              "canonicalReference": "@cashu/cashu-ts!OutputAmounts:type"
            },
            {
              "kind": "Content",
              "text": ";\n\tproofsWeHave?: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Proof",
              "canonicalReference": "@cashu/cashu-ts!Proof:type"
            },
            {
              "kind": "Content",
              "text": ">;\n\tcounter?: number;\n\tpubkey?: string;\n\toutputData?: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "OutputDataLike",
              "canonicalReference": "@cashu/cashu-ts!~OutputDataLike:interface"
            },
            {
              "kind": "Content",
              "text": "> | "
            },
            {
              "kind": "Reference",
              "text": "OutputDataFactory",
              "canonicalReference": "@cashu/cashu-ts!~OutputDataFactory:type"
            },
            {
              "kind": "Content",
              "text": ";\n\tp2pk?: {\n\t\tpubkey: string | "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<string>;\n\t\tlocktime?: number;\n\t\trefundKeys?: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<string>;\n\t\tnsig?: number;\n\t\trsig?: number;\n\t};\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/model/types/index.d.ts",
          "releaseTag": "Public",
          "name": "MintProofOptions",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 18
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cashu/cashu-ts!MintQuotePayload:type",
          "docComment": "/**\n * Payload that needs to be sent to the mint when requesting a mint\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type MintQuotePayload = "
            },
            {
              "kind": "Content",
              "text": "{\n\tunit: string;\n\tamount: number;\n\tdescription?: string;\n\tpubkey?: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/model/types/wallet/payloads.d.ts",
          "releaseTag": "Public",
          "name": "MintQuotePayload",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cashu/cashu-ts!MintQuoteResponse:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type MintQuoteResponse = "
            },
            {
              "kind": "Reference",
              "text": "PartialMintQuoteResponse",
              "canonicalReference": "@cashu/cashu-ts!PartialMintQuoteResponse:type"
            },
            {
              "kind": "Content",
              "text": " & {\n\tamount: number;\n\tunit: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/model/types/mint/responses.d.ts",
          "releaseTag": "Public",
          "name": "MintQuoteResponse",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cashu/cashu-ts!MintQuoteState:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type MintQuoteState = "
            },
            {
              "kind": "Content",
              "text": "(typeof "
            },
            {
              "kind": "Reference",
              "text": "MintQuoteState",
              "canonicalReference": "@cashu/cashu-ts!MintQuoteState:var"
            },
            {
              "kind": "Content",
              "text": ")[keyof typeof "
            },
            {
              "kind": "Reference",
              "text": "MintQuoteState",
              "canonicalReference": "@cashu/cashu-ts!MintQuoteState:var"
            },
            {
              "kind": "Content",
              "text": "]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/model/types/mint/responses.d.ts",
          "releaseTag": "Public",
          "name": "MintQuoteState",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@cashu/cashu-ts!MintQuoteState:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "MintQuoteState: "
            },
            {
              "kind": "Content",
              "text": "{\n\treadonly UNPAID: 'UNPAID';\n\treadonly PAID: 'PAID';\n\treadonly ISSUED: 'ISSUED';\n}"
            }
          ],
          "fileUrlPath": "lib/types/model/types/mint/responses.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "MintQuoteState",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cashu/cashu-ts!MintResponse:type",
          "docComment": "/**\n * Response from the mint after requesting a mint\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type MintResponse = "
            },
            {
              "kind": "Content",
              "text": "{\n\tsignatures: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "SerializedBlindedSignature",
              "canonicalReference": "@cashu/cashu-ts!SerializedBlindedSignature:type"
            },
            {
              "kind": "Content",
              "text": ">;\n} & "
            },
            {
              "kind": "Reference",
              "text": "ApiError",
              "canonicalReference": "@cashu/cashu-ts!ApiError:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/model/types/mint/responses.d.ts",
          "releaseTag": "Public",
          "name": "MintResponse",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cashu/cashu-ts!MPPMethod:type",
          "docComment": "/**\n * MPP supported methods\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type MPPMethod = "
            },
            {
              "kind": "Content",
              "text": "{\n\tmethod: string;\n\tunit: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/model/types/mint/responses.d.ts",
          "releaseTag": "Public",
          "name": "MPPMethod",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cashu/cashu-ts!MPPOption:type",
          "docComment": "/**\n * Multi path payments option\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type MPPOption = "
            },
            {
              "kind": "Content",
              "text": "{\n\tamount: number;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/model/types/wallet/payloads.d.ts",
          "releaseTag": "Public",
          "name": "MPPOption",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@cashu/cashu-ts!NetworkError:class",
          "docComment": "/**\n * This error is thrown when a network request fails.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class NetworkError extends "
            },
            {
              "kind": "Reference",
              "text": "Error",
              "canonicalReference": "!Error:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "lib/types/model/Errors.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "NetworkError",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@cashu/cashu-ts!NetworkError:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `NetworkError` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(message: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cashu/cashu-ts!NUT10Option:type",
          "docComment": "/**\n * Used to express a spending condition that proofs should be encumbered with\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type NUT10Option = "
            },
            {
              "kind": "Content",
              "text": "{\n\tkind: string;\n\tdata: string;\n\ttags: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<string>>;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/model/types/wallet/paymentRequests.d.ts",
          "releaseTag": "Public",
          "name": "NUT10Option",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cashu/cashu-ts!OutputAmounts:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type OutputAmounts = "
            },
            {
              "kind": "Content",
              "text": "{\n\tsendAmounts: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<number>;\n\tkeepAmounts?: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<number>;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/model/types/index.d.ts",
          "releaseTag": "Public",
          "name": "OutputAmounts",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@cashu/cashu-ts!OutputData:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class OutputData implements "
            },
            {
              "kind": "Reference",
              "text": "OutputDataLike",
              "canonicalReference": "@cashu/cashu-ts!~OutputDataLike:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "lib/types/model/OutputData.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "OutputData",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@cashu/cashu-ts!OutputData:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `OutputData` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(blindedMessage: "
                },
                {
                  "kind": "Reference",
                  "text": "SerializedBlindedMessage",
                  "canonicalReference": "@cashu/cashu-ts!SerializedBlindedMessage:type"
                },
                {
                  "kind": "Content",
                  "text": ", blidingFactor: "
                },
                {
                  "kind": "Content",
                  "text": "bigint"
                },
                {
                  "kind": "Content",
                  "text": ", secret: "
                },
                {
                  "kind": "Reference",
                  "text": "Uint8Array",
                  "canonicalReference": "!Uint8Array:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "blindedMessage",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "blidingFactor",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "secret",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@cashu/cashu-ts!OutputData#blindedMessage:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "blindedMessage: "
                },
                {
                  "kind": "Reference",
                  "text": "SerializedBlindedMessage",
                  "canonicalReference": "@cashu/cashu-ts!SerializedBlindedMessage:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "blindedMessage",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@cashu/cashu-ts!OutputData#blindingFactor:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "blindingFactor: "
                },
                {
                  "kind": "Content",
                  "text": "bigint"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "blindingFactor",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!OutputData.createDeterministicData:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static createDeterministicData(\n\t\tamount: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ",\n\t\tseed: "
                },
                {
                  "kind": "Reference",
                  "text": "Uint8Array",
                  "canonicalReference": "!Uint8Array:interface"
                },
                {
                  "kind": "Content",
                  "text": ",\n\t\tcounter: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ",\n\t\tkeyset: "
                },
                {
                  "kind": "Reference",
                  "text": "MintKeys",
                  "canonicalReference": "@cashu/cashu-ts!MintKeys:type"
                },
                {
                  "kind": "Content",
                  "text": ",\n\t\tcustomSplit?: "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<number>"
                },
                {
                  "kind": "Content",
                  "text": "\n\t): "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "OutputData",
                  "canonicalReference": "@cashu/cashu-ts!OutputData:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 12,
                "endIndex": 16
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "amount",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "seed",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "counter",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "keyset",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "customSplit",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 11
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "createDeterministicData"
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!OutputData.createP2PKData:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static createP2PKData(\n\t\tp2pk: "
                },
                {
                  "kind": "Content",
                  "text": "{\n\t\t\tpubkey: string | "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string>;\n\t\t\tlocktime?: number;\n\t\t\trefundKeys?: "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string>;\n\t\t\tnsig?: number;\n\t\t\trsig?: number;\n\t\t}"
                },
                {
                  "kind": "Content",
                  "text": ",\n\t\tamount: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ",\n\t\tkeyset: "
                },
                {
                  "kind": "Reference",
                  "text": "MintKeys",
                  "canonicalReference": "@cashu/cashu-ts!MintKeys:type"
                },
                {
                  "kind": "Content",
                  "text": ",\n\t\tcustomSplit?: "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<number>"
                },
                {
                  "kind": "Content",
                  "text": "\n\t): "
                },
                {
                  "kind": "Reference",
                  "text": "OutputData",
                  "canonicalReference": "@cashu/cashu-ts!OutputData:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 14,
                "endIndex": 16
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "p2pk",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "amount",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "keyset",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "customSplit",
                  "parameterTypeTokenRange": {
                    "startIndex": 11,
                    "endIndex": 13
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "createP2PKData"
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!OutputData.createRandomData:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static createRandomData(\n\t\tamount: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ",\n\t\tkeyset: "
                },
                {
                  "kind": "Reference",
                  "text": "MintKeys",
                  "canonicalReference": "@cashu/cashu-ts!MintKeys:type"
                },
                {
                  "kind": "Content",
                  "text": ",\n\t\tcustomSplit?: "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<number>"
                },
                {
                  "kind": "Content",
                  "text": "\n\t): "
                },
                {
                  "kind": "Reference",
                  "text": "OutputData",
                  "canonicalReference": "@cashu/cashu-ts!OutputData:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "amount",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "keyset",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "customSplit",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 7
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "createRandomData"
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!OutputData.createSingleDeterministicData:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static createSingleDeterministicData(\n\t\tamount: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ",\n\t\tseed: "
                },
                {
                  "kind": "Reference",
                  "text": "Uint8Array",
                  "canonicalReference": "!Uint8Array:interface"
                },
                {
                  "kind": "Content",
                  "text": ",\n\t\tcounter: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ",\n\t\tkeysetId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "\n\t): "
                },
                {
                  "kind": "Reference",
                  "text": "OutputData",
                  "canonicalReference": "@cashu/cashu-ts!OutputData:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "amount",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "seed",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "counter",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "keysetId",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "createSingleDeterministicData"
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!OutputData.createSingleP2PKData:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static createSingleP2PKData(\n\t\tp2pk: "
                },
                {
                  "kind": "Content",
                  "text": "{\n\t\t\tpubkey: string | "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string>;\n\t\t\tlocktime?: number;\n\t\t\trefundKeys?: "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string>;\n\t\t\tnsig?: number;\n\t\t\trsig?: number;\n\t\t}"
                },
                {
                  "kind": "Content",
                  "text": ",\n\t\tamount: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ",\n\t\tkeysetId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "\n\t): "
                },
                {
                  "kind": "Reference",
                  "text": "OutputData",
                  "canonicalReference": "@cashu/cashu-ts!OutputData:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "p2pk",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "amount",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "keysetId",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "createSingleP2PKData"
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!OutputData.createSingleRandomData:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static createSingleRandomData(amount: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", keysetId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "OutputData",
                  "canonicalReference": "@cashu/cashu-ts!OutputData:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "amount",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "keysetId",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "createSingleRandomData"
            },
            {
              "kind": "Property",
              "canonicalReference": "@cashu/cashu-ts!OutputData#secret:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "secret: "
                },
                {
                  "kind": "Reference",
                  "text": "Uint8Array",
                  "canonicalReference": "!Uint8Array:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "secret",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!OutputData#toProof:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toProof(sig: "
                },
                {
                  "kind": "Reference",
                  "text": "SerializedBlindedSignature",
                  "canonicalReference": "@cashu/cashu-ts!SerializedBlindedSignature:type"
                },
                {
                  "kind": "Content",
                  "text": ", keyset: "
                },
                {
                  "kind": "Reference",
                  "text": "MintKeys",
                  "canonicalReference": "@cashu/cashu-ts!MintKeys:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Proof",
                  "canonicalReference": "@cashu/cashu-ts!Proof:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "sig",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "keyset",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "toProof"
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cashu/cashu-ts!P2PKWitness:type",
          "docComment": "/**\n * P2PK witness\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type P2PKWitness = "
            },
            {
              "kind": "Content",
              "text": "{\n\tsignatures?: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<string>;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/model/types/wallet/index.d.ts",
          "releaseTag": "Public",
          "name": "P2PKWitness",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@cashu/cashu-ts!parseP2PKSecret:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "parseP2PKSecret: (secret: "
            },
            {
              "kind": "Content",
              "text": "string | "
            },
            {
              "kind": "Reference",
              "text": "Uint8Array",
              "canonicalReference": "!Uint8Array:interface"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "Secret",
              "canonicalReference": "@cashu/cashu-ts!~Secret:type"
            }
          ],
          "fileUrlPath": "lib/types/crypto/common/NUT11.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 4,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "secret",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isOptional": false
            }
          ],
          "name": "parseP2PKSecret"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cashu/cashu-ts!PartialMeltQuoteResponse:type",
          "docComment": "/**\n * Response from the mint after requesting a melt quote\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PartialMeltQuoteResponse = "
            },
            {
              "kind": "Content",
              "text": "{\n\tquote: string;\n\tamount: number;\n\tfee_reserve: number;\n\tstate: "
            },
            {
              "kind": "Reference",
              "text": "MeltQuoteState",
              "canonicalReference": "@cashu/cashu-ts!MeltQuoteState:type"
            },
            {
              "kind": "Content",
              "text": ";\n\texpiry: number;\n\tpayment_preimage: string | null;\n\tchange?: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "SerializedBlindedSignature",
              "canonicalReference": "@cashu/cashu-ts!SerializedBlindedSignature:type"
            },
            {
              "kind": "Content",
              "text": ">;\n\trequest?: string;\n\tunit?: string;\n} & "
            },
            {
              "kind": "Reference",
              "text": "ApiError",
              "canonicalReference": "@cashu/cashu-ts!ApiError:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/model/types/mint/responses.d.ts",
          "releaseTag": "Public",
          "name": "PartialMeltQuoteResponse",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cashu/cashu-ts!PartialMintQuoteResponse:type",
          "docComment": "/**\n * Response from the mint after requesting a mint\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PartialMintQuoteResponse = "
            },
            {
              "kind": "Content",
              "text": "{\n\trequest: string;\n\tquote: string;\n\tstate: "
            },
            {
              "kind": "Reference",
              "text": "MintQuoteState",
              "canonicalReference": "@cashu/cashu-ts!MintQuoteState:type"
            },
            {
              "kind": "Content",
              "text": ";\n\texpiry: number;\n\tpubkey?: string;\n\tunit?: string;\n\tamount?: number;\n} & "
            },
            {
              "kind": "Reference",
              "text": "ApiError",
              "canonicalReference": "@cashu/cashu-ts!ApiError:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/model/types/mint/responses.d.ts",
          "releaseTag": "Public",
          "name": "PartialMintQuoteResponse",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cashu/cashu-ts!PaymentPayload:type",
          "docComment": "/**\n * Payload that needs to be sent to the mint when paying a lightning invoice.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PaymentPayload = "
            },
            {
              "kind": "Content",
              "text": "{\n\tpr: string;\n\tproofs: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Proof",
              "canonicalReference": "@cashu/cashu-ts!Proof:type"
            },
            {
              "kind": "Content",
              "text": ">;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/model/types/wallet/index.d.ts",
          "releaseTag": "Public",
          "name": "PaymentPayload",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@cashu/cashu-ts!PaymentRequest_2:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class PaymentRequest "
            }
          ],
          "fileUrlPath": "lib/types/model/PaymentRequest.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "PaymentRequest_2",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@cashu/cashu-ts!PaymentRequest_2:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `PaymentRequest` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(\n\t\ttransport?: "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "PaymentRequestTransport",
                  "canonicalReference": "@cashu/cashu-ts!PaymentRequestTransport:type"
                },
                {
                  "kind": "Content",
                  "text": "> | undefined"
                },
                {
                  "kind": "Content",
                  "text": ",\n\t\tid?: "
                },
                {
                  "kind": "Content",
                  "text": "string | undefined"
                },
                {
                  "kind": "Content",
                  "text": ",\n\t\tamount?: "
                },
                {
                  "kind": "Content",
                  "text": "number | undefined"
                },
                {
                  "kind": "Content",
                  "text": ",\n\t\tunit?: "
                },
                {
                  "kind": "Content",
                  "text": "string | undefined"
                },
                {
                  "kind": "Content",
                  "text": ",\n\t\tmints?: "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string> | undefined"
                },
                {
                  "kind": "Content",
                  "text": ",\n\t\tdescription?: "
                },
                {
                  "kind": "Content",
                  "text": "string | undefined"
                },
                {
                  "kind": "Content",
                  "text": ",\n\t\tsingleUse?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ",\n\t\tnut10?: "
                },
                {
                  "kind": "Reference",
                  "text": "NUT10Option",
                  "canonicalReference": "@cashu/cashu-ts!NUT10Option:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": "\n\t);"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "transport",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "amount",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "unit",
                  "parameterTypeTokenRange": {
                    "startIndex": 10,
                    "endIndex": 11
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "mints",
                  "parameterTypeTokenRange": {
                    "startIndex": 12,
                    "endIndex": 14
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "description",
                  "parameterTypeTokenRange": {
                    "startIndex": 15,
                    "endIndex": 16
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "singleUse",
                  "parameterTypeTokenRange": {
                    "startIndex": 17,
                    "endIndex": 18
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "nut10",
                  "parameterTypeTokenRange": {
                    "startIndex": 19,
                    "endIndex": 21
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@cashu/cashu-ts!PaymentRequest_2#amount:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "amount?: "
                },
                {
                  "kind": "Content",
                  "text": "number | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "amount",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@cashu/cashu-ts!PaymentRequest_2#description:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "description?: "
                },
                {
                  "kind": "Content",
                  "text": "string | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "description",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!PaymentRequest_2.fromEncodedRequest:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static fromEncodedRequest(encodedRequest: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "PaymentRequest",
                  "canonicalReference": "@cashu/cashu-ts!PaymentRequest_2:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "encodedRequest",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "fromEncodedRequest"
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!PaymentRequest_2.fromRawRequest:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static fromRawRequest(rawPaymentRequest: "
                },
                {
                  "kind": "Reference",
                  "text": "RawPaymentRequest",
                  "canonicalReference": "@cashu/cashu-ts!RawPaymentRequest:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "PaymentRequest",
                  "canonicalReference": "@cashu/cashu-ts!PaymentRequest_2:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "rawPaymentRequest",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "fromRawRequest"
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!PaymentRequest_2#getTransport:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getTransport(type: "
                },
                {
                  "kind": "Reference",
                  "text": "PaymentRequestTransportType",
                  "canonicalReference": "@cashu/cashu-ts!PaymentRequestTransportType:enum"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "PaymentRequestTransport",
                  "canonicalReference": "@cashu/cashu-ts!PaymentRequestTransport:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "type",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getTransport"
            },
            {
              "kind": "Property",
              "canonicalReference": "@cashu/cashu-ts!PaymentRequest_2#id:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "id?: "
                },
                {
                  "kind": "Content",
                  "text": "string | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@cashu/cashu-ts!PaymentRequest_2#mints:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mints?: "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string> | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "mints",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@cashu/cashu-ts!PaymentRequest_2#nut10:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "nut10?: "
                },
                {
                  "kind": "Reference",
                  "text": "NUT10Option",
                  "canonicalReference": "@cashu/cashu-ts!NUT10Option:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "nut10",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@cashu/cashu-ts!PaymentRequest_2#singleUse:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "singleUse: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "singleUse",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!PaymentRequest_2#toEncodedRequest:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toEncodedRequest(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "toEncodedRequest"
            },
            {
              "kind": "Method",
              "canonicalReference": "@cashu/cashu-ts!PaymentRequest_2#toRawRequest:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toRawRequest(): "
                },
                {
                  "kind": "Reference",
                  "text": "RawPaymentRequest",
                  "canonicalReference": "@cashu/cashu-ts!RawPaymentRequest:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "toRawRequest"
            },
            {
              "kind": "Property",
              "canonicalReference": "@cashu/cashu-ts!PaymentRequest_2#transport:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "transport?: "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "PaymentRequestTransport",
                  "canonicalReference": "@cashu/cashu-ts!PaymentRequestTransport:type"
                },
                {
                  "kind": "Content",
                  "text": "> | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "transport",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@cashu/cashu-ts!PaymentRequest_2#unit:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "unit?: "
                },
                {
                  "kind": "Content",
                  "text": "string | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "unit",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cashu/cashu-ts!PaymentRequestPayload:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PaymentRequestPayload = "
            },
            {
              "kind": "Content",
              "text": "{\n\tid?: string;\n\tmemo?: string;\n\tunit: string;\n\tmint: string;\n\tproofs: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Proof",
              "canonicalReference": "@cashu/cashu-ts!Proof:type"
            },
            {
              "kind": "Content",
              "text": ">;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/model/types/wallet/paymentRequests.d.ts",
          "releaseTag": "Public",
          "name": "PaymentRequestPayload",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cashu/cashu-ts!PaymentRequestTransport:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PaymentRequestTransport = "
            },
            {
              "kind": "Content",
              "text": "{\n\ttype: "
            },
            {
              "kind": "Reference",
              "text": "PaymentRequestTransportType",
              "canonicalReference": "@cashu/cashu-ts!PaymentRequestTransportType:enum"
            },
            {
              "kind": "Content",
              "text": ";\n\ttarget: string;\n\ttags?: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<string>>;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/model/types/wallet/paymentRequests.d.ts",
          "releaseTag": "Public",
          "name": "PaymentRequestTransport",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "Enum",
          "canonicalReference": "@cashu/cashu-ts!PaymentRequestTransportType:enum",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum PaymentRequestTransportType "
            }
          ],
          "fileUrlPath": "lib/types/model/types/wallet/paymentRequests.d.ts",
          "releaseTag": "Public",
          "name": "PaymentRequestTransportType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@cashu/cashu-ts!PaymentRequestTransportType.NOSTR:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "NOSTR = "
                },
                {
                  "kind": "Content",
                  "text": "'nostr'"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "NOSTR"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@cashu/cashu-ts!PaymentRequestTransportType.POST:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "POST = "
                },
                {
                  "kind": "Content",
                  "text": "'post'"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "POST"
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cashu/cashu-ts!PostRestorePayload:type",
          "docComment": "/**\n * Request to mint at /v1/restore endpoint\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PostRestorePayload = "
            },
            {
              "kind": "Content",
              "text": "{\n\toutputs: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "SerializedBlindedMessage",
              "canonicalReference": "@cashu/cashu-ts!SerializedBlindedMessage:type"
            },
            {
              "kind": "Content",
              "text": ">;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/model/types/mint/index.d.ts",
          "releaseTag": "Public",
          "name": "PostRestorePayload",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cashu/cashu-ts!PostRestoreResponse:type",
          "docComment": "/**\n * Response from mint at /v1/restore endpoint\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PostRestoreResponse = "
            },
            {
              "kind": "Content",
              "text": "{\n\toutputs: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "SerializedBlindedMessage",
              "canonicalReference": "@cashu/cashu-ts!SerializedBlindedMessage:type"
            },
            {
              "kind": "Content",
              "text": ">;\n\tsignatures: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "SerializedBlindedSignature",
              "canonicalReference": "@cashu/cashu-ts!SerializedBlindedSignature:type"
            },
            {
              "kind": "Content",
              "text": ">;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/model/types/mint/responses.d.ts",
          "releaseTag": "Public",
          "name": "PostRestoreResponse",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 10
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cashu/cashu-ts!Proof:type",
          "docComment": "/**\n * represents a single Cashu proof.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type Proof = "
            },
            {
              "kind": "Content",
              "text": "{\n\tid: string;\n\tamount: number;\n\tsecret: string;\n\tC: string;\n\tdleq?: "
            },
            {
              "kind": "Reference",
              "text": "SerializedDLEQ",
              "canonicalReference": "@cashu/cashu-ts!SerializedDLEQ:type"
            },
            {
              "kind": "Content",
              "text": ";\n\twitness?: string | "
            },
            {
              "kind": "Reference",
              "text": "P2PKWitness",
              "canonicalReference": "@cashu/cashu-ts!P2PKWitness:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "HTLCWitness",
              "canonicalReference": "@cashu/cashu-ts!HTLCWitness:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/model/types/wallet/index.d.ts",
          "releaseTag": "Public",
          "name": "Proof",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cashu/cashu-ts!ProofState:type",
          "docComment": "/**\n * Entries of CheckStateResponse with state of the proof\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ProofState = "
            },
            {
              "kind": "Content",
              "text": "{\n\tY: string;\n\tstate: "
            },
            {
              "kind": "Reference",
              "text": "CheckStateEnum",
              "canonicalReference": "@cashu/cashu-ts!CheckStateEnum:type"
            },
            {
              "kind": "Content",
              "text": ";\n\twitness: string | null;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/model/types/mint/responses.d.ts",
          "releaseTag": "Public",
          "name": "ProofState",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cashu/cashu-ts!RawNUT10Option:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type RawNUT10Option = "
            },
            {
              "kind": "Content",
              "text": "{\n\tk: string;\n\td: string;\n\tt: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<string>>;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/model/types/wallet/paymentRequests.d.ts",
          "releaseTag": "Public",
          "name": "RawNUT10Option",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cashu/cashu-ts!RawPaymentRequest:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type RawPaymentRequest = "
            },
            {
              "kind": "Content",
              "text": "{\n\ti?: string;\n\ta?: number;\n\tu?: string;\n\ts?: boolean;\n\tm?: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<string>;\n\td?: string;\n\tt?: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "RawTransport",
              "canonicalReference": "@cashu/cashu-ts!RawTransport:type"
            },
            {
              "kind": "Content",
              "text": ">;\n\tnut10?: "
            },
            {
              "kind": "Reference",
              "text": "RawNUT10Option",
              "canonicalReference": "@cashu/cashu-ts!RawNUT10Option:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/model/types/wallet/paymentRequests.d.ts",
          "releaseTag": "Public",
          "name": "RawPaymentRequest",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 10
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cashu/cashu-ts!RawTransport:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type RawTransport = "
            },
            {
              "kind": "Content",
              "text": "{\n\tt: "
            },
            {
              "kind": "Reference",
              "text": "PaymentRequestTransportType",
              "canonicalReference": "@cashu/cashu-ts!PaymentRequestTransportType:enum"
            },
            {
              "kind": "Content",
              "text": ";\n\ta: string;\n\tg?: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<string>>;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/model/types/wallet/paymentRequests.d.ts",
          "releaseTag": "Public",
          "name": "RawTransport",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cashu/cashu-ts!ReceiveOptions:type",
          "docComment": "/**\n * @param options - Optional configuration for token processing: - `keysetId`: Override the default keyset ID with a custom one fetched from the `/keysets` endpoint. - `outputAmounts`: Specify output amounts for keeping or sending. - `proofsWeHave`: Provide stored proofs for optimal output derivation. - `counter`: Set a counter to deterministically derive secrets (requires CashuWallet initialized with a seed phrase). - `pubkey`: Lock eCash to a public key (non-deterministic, even with a counter set). - `privkey`: Create a signature for token secrets. - `requireDleq`: Verify DLEQ proofs for all provided proofs; reject the token if any proof fails verification.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ReceiveOptions = "
            },
            {
              "kind": "Content",
              "text": "{\n\tkeysetId?: string;\n\toutputAmounts?: "
            },
            {
              "kind": "Reference",
              "text": "OutputAmounts",
              "canonicalReference": "@cashu/cashu-ts!OutputAmounts:type"
            },
            {
              "kind": "Content",
              "text": ";\n\tproofsWeHave?: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Proof",
              "canonicalReference": "@cashu/cashu-ts!Proof:type"
            },
            {
              "kind": "Content",
              "text": ">;\n\tcounter?: number;\n\tpubkey?: string;\n\tprivkey?: string;\n\trequireDleq?: boolean;\n\toutputData?: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "OutputDataLike",
              "canonicalReference": "@cashu/cashu-ts!~OutputDataLike:interface"
            },
            {
              "kind": "Content",
              "text": "> | "
            },
            {
              "kind": "Reference",
              "text": "OutputDataFactory",
              "canonicalReference": "@cashu/cashu-ts!~OutputDataFactory:type"
            },
            {
              "kind": "Content",
              "text": ";\n\tp2pk?: {\n\t\tpubkey: string | "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<string>;\n\t\tlocktime?: number;\n\t\trefundKeys?: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<string>;\n\t\tnsig?: number;\n\t\trsig?: number;\n\t};\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/model/types/index.d.ts",
          "releaseTag": "Public",
          "name": "ReceiveOptions",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 18
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cashu/cashu-ts!ReceiveResponse:type",
          "docComment": "/**\n * Response when receiving a complete token.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ReceiveResponse = "
            },
            {
              "kind": "Content",
              "text": "{\n\ttoken: "
            },
            {
              "kind": "Reference",
              "text": "Token",
              "canonicalReference": "@cashu/cashu-ts!Token:type"
            },
            {
              "kind": "Content",
              "text": ";\n\ttokensWithErrors: "
            },
            {
              "kind": "Reference",
              "text": "Token",
              "canonicalReference": "@cashu/cashu-ts!Token:type"
            },
            {
              "kind": "Content",
              "text": " | undefined;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/model/types/wallet/responses.d.ts",
          "releaseTag": "Public",
          "name": "ReceiveResponse",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cashu/cashu-ts!ReceiveTokenEntryResponse:type",
          "docComment": "/**\n * response when after receiving a single TokenEntry\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ReceiveTokenEntryResponse = "
            },
            {
              "kind": "Content",
              "text": "{\n\tproofs: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Proof",
              "canonicalReference": "@cashu/cashu-ts!Proof:type"
            },
            {
              "kind": "Content",
              "text": ">;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/model/types/wallet/index.d.ts",
          "releaseTag": "Public",
          "name": "ReceiveTokenEntryResponse",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cashu/cashu-ts!RestoreOptions:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type RestoreOptions = "
            },
            {
              "kind": "Content",
              "text": "{\n\tkeysetId?: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/model/types/index.d.ts",
          "releaseTag": "Public",
          "name": "RestoreOptions",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cashu/cashu-ts!RpcSubId:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type RpcSubId = "
            },
            {
              "kind": "Content",
              "text": "string | number | null"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/model/types/index.d.ts",
          "releaseTag": "Public",
          "name": "RpcSubId",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cashu/cashu-ts!SendOptions:type",
          "docComment": "/**\n * @param options - Optional parameters for configuring the send operation: - `outputAmounts` (OutputAmounts): Specify the amounts to keep and send in the output. - `counter` (number): Set a counter to derive secrets deterministically. Requires the `CashuWallet` class to be initialized with a seed phrase. - `proofsWeHave` (Array<Proof>): Provide all currently stored proofs for the mint. Used to derive optimal output amounts. - `pubkey` (string): Lock eCash to a specified public key. Note that this will not be deterministic, even if a counter is set. - `privkey` (string): Create a signature for the output secrets if provided. - `keysetId` (string): Override the keyset ID derived from the current mint keys with a custom one. The keyset ID should be fetched from the `/keysets` endpoint. - `offline` (boolean): Send proofs offline, if enabled. - `includeFees` (boolean): Include fees in the response, if enabled. - `includeDleq` (boolean): Include DLEQ proofs in the proofs to be sent, if enabled.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type SendOptions = "
            },
            {
              "kind": "Content",
              "text": "{\n\toutputAmounts?: "
            },
            {
              "kind": "Reference",
              "text": "OutputAmounts",
              "canonicalReference": "@cashu/cashu-ts!OutputAmounts:type"
            },
            {
              "kind": "Content",
              "text": ";\n\tproofsWeHave?: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Proof",
              "canonicalReference": "@cashu/cashu-ts!Proof:type"
            },
            {
              "kind": "Content",
              "text": ">;\n\tcounter?: number;\n\tpubkey?: string;\n\tprivkey?: string;\n\tkeysetId?: string;\n\toffline?: boolean;\n\tincludeFees?: boolean;\n\tincludeDleq?: boolean;\n\toutputData?: {\n\t\tsend?: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "OutputDataLike",
              "canonicalReference": "@cashu/cashu-ts!~OutputDataLike:interface"
            },
            {
              "kind": "Content",
              "text": "> | "
            },
            {
              "kind": "Reference",
              "text": "OutputDataFactory",
              "canonicalReference": "@cashu/cashu-ts!~OutputDataFactory:type"
            },
            {
              "kind": "Content",
              "text": ";\n\t\tkeep?: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "OutputDataLike",
              "canonicalReference": "@cashu/cashu-ts!~OutputDataLike:interface"
            },
            {
              "kind": "Content",
              "text": "> | "
            },
            {
              "kind": "Reference",
              "text": "OutputDataFactory",
              "canonicalReference": "@cashu/cashu-ts!~OutputDataFactory:type"
            },
            {
              "kind": "Content",
              "text": ";\n\t};\n\tp2pk?: {\n\t\tpubkey: string | "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<string>;\n\t\tlocktime?: number;\n\t\trefundKeys?: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<string>;\n\t\tnsig?: number;\n\t\trsig?: number;\n\t};\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/model/types/index.d.ts",
          "releaseTag": "Public",
          "name": "SendOptions",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 24
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cashu/cashu-ts!SendResponse:type",
          "docComment": "/**\n * response after sending\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type SendResponse = "
            },
            {
              "kind": "Content",
              "text": "{\n\tkeep: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Proof",
              "canonicalReference": "@cashu/cashu-ts!Proof:type"
            },
            {
              "kind": "Content",
              "text": ">;\n\tsend: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Proof",
              "canonicalReference": "@cashu/cashu-ts!Proof:type"
            },
            {
              "kind": "Content",
              "text": ">;\n\tserialized?: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<{\n\t\tproof: "
            },
            {
              "kind": "Reference",
              "text": "Proof",
              "canonicalReference": "@cashu/cashu-ts!Proof:type"
            },
            {
              "kind": "Content",
              "text": ";\n\t\tkeep: boolean;\n\t}>;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/model/types/wallet/responses.d.ts",
          "releaseTag": "Public",
          "name": "SendResponse",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 14
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cashu/cashu-ts!SerializedBlindedMessage:type",
          "docComment": "/**\n * blinded message for sending to the mint\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type SerializedBlindedMessage = "
            },
            {
              "kind": "Content",
              "text": "{\n\tamount: number;\n\tB_: string;\n\tid: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/model/types/wallet/payloads.d.ts",
          "releaseTag": "Public",
          "name": "SerializedBlindedMessage",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cashu/cashu-ts!SerializedBlindedSignature:type",
          "docComment": "/**\n * Blinded signature as it is received from the mint\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type SerializedBlindedSignature = "
            },
            {
              "kind": "Content",
              "text": "{\n\tid: string;\n\tamount: number;\n\tC_: string;\n\tdleq?: "
            },
            {
              "kind": "Reference",
              "text": "SerializedDLEQ",
              "canonicalReference": "@cashu/cashu-ts!SerializedDLEQ:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/model/types/mint/responses.d.ts",
          "releaseTag": "Public",
          "name": "SerializedBlindedSignature",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cashu/cashu-ts!SerializedDLEQ:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type SerializedDLEQ = "
            },
            {
              "kind": "Content",
              "text": "{\n\ts: string;\n\te: string;\n\tr?: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/model/types/mint/responses.d.ts",
          "releaseTag": "Public",
          "name": "SerializedDLEQ",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@cashu/cashu-ts!setGlobalRequestOptions:function(1)",
          "docComment": "/**\n * An object containing any custom settings that you want to apply to the global fetch method.\n *\n * @param options - See possible options here: https://developer.mozilla.org/en-US/docs/Web/API/fetch#options\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function setGlobalRequestOptions(options: "
            },
            {
              "kind": "Reference",
              "text": "Partial",
              "canonicalReference": "!Partial:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "RequestOptions",
              "canonicalReference": "@cashu/cashu-ts!~RequestOptions:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/request.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 6,
            "endIndex": 7
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "options",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isOptional": false
            }
          ],
          "name": "setGlobalRequestOptions"
        },
        {
          "kind": "Function",
          "canonicalReference": "@cashu/cashu-ts!signP2PKProofs:function(1)",
          "docComment": "/**\n * Signs proofs with provided private key(s) if required NB: Will only sign if the proof requires a signature from the key\n *\n * @param proofs - An array of proofs to sign\n *\n * @param privateKey - a single private key, or array of private keys\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "signP2PKProofs: (\n\tproofs: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Proof",
              "canonicalReference": "@cashu/cashu-ts!Proof:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ",\n\tprivateKey: "
            },
            {
              "kind": "Content",
              "text": "string | "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<string>"
            },
            {
              "kind": "Content",
              "text": "\n) => "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Proof",
              "canonicalReference": "@cashu/cashu-ts!Proof:type"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "fileUrlPath": "lib/types/crypto/client/NUT11.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 10,
            "endIndex": 14
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "proofs",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isOptional": false
            },
            {
              "parameterName": "privateKey",
              "parameterTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 9
              },
              "isOptional": false
            }
          ],
          "name": "signP2PKProofs"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cashu/cashu-ts!SwapMethod:type",
          "docComment": "/**\n * Ecash to other MoE swap method, displayed in  @type {GetInfoResponse}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type SwapMethod = "
            },
            {
              "kind": "Content",
              "text": "{\n\tmethod: string;\n\tunit: string;\n\tmin_amount: number;\n\tmax_amount: number;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/model/types/mint/responses.d.ts",
          "releaseTag": "Public",
          "name": "SwapMethod",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cashu/cashu-ts!SwapOptions:type",
          "docComment": "/**\n * @param options - Optional parameters for configuring the swap operation: - `amount`: amount to send while performing the optimal split (least proofs possible). can be set to undefined if preference is set - proofs proofs matching that amount - outputAmounts? optionally specify the output's amounts to keep and to send. - counter? optionally set counter to derive secret deterministically. CashuWallet class must be initialized with seed phrase to take effect - keysetId? override the keysetId derived from the current mintKeys with a custom one. This should be a keyset that was fetched from the `/keysets` endpoint - includeFees? include estimated fees for the receiver to receive the proofs - proofsWeHave? optionally provide all currently stored proofs of this mint. Cashu-ts will use them to derive the optimal output amounts - pubkey? optionally locks ecash to pubkey. Will not be deterministic, even if counter is set! - privkey? will create a signature on the proofs secrets if set\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type SwapOptions = "
            },
            {
              "kind": "Content",
              "text": "{\n\toutputAmounts?: "
            },
            {
              "kind": "Reference",
              "text": "OutputAmounts",
              "canonicalReference": "@cashu/cashu-ts!OutputAmounts:type"
            },
            {
              "kind": "Content",
              "text": ";\n\tproofsWeHave?: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Proof",
              "canonicalReference": "@cashu/cashu-ts!Proof:type"
            },
            {
              "kind": "Content",
              "text": ">;\n\tcounter?: number;\n\tpubkey?: string;\n\tprivkey?: string;\n\tkeysetId?: string;\n\tincludeFees?: boolean;\n\toutputData?: {\n\t\tsend?: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "OutputDataLike",
              "canonicalReference": "@cashu/cashu-ts!~OutputDataLike:interface"
            },
            {
              "kind": "Content",
              "text": "> | "
            },
            {
              "kind": "Reference",
              "text": "OutputDataFactory",
              "canonicalReference": "@cashu/cashu-ts!~OutputDataFactory:type"
            },
            {
              "kind": "Content",
              "text": ";\n\t\tkeep?: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "OutputDataLike",
              "canonicalReference": "@cashu/cashu-ts!~OutputDataLike:interface"
            },
            {
              "kind": "Content",
              "text": "> | "
            },
            {
              "kind": "Reference",
              "text": "OutputDataFactory",
              "canonicalReference": "@cashu/cashu-ts!~OutputDataFactory:type"
            },
            {
              "kind": "Content",
              "text": ";\n\t};\n\tp2pk?: {\n\t\tpubkey: string | "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<string>;\n\t\tlocktime?: number;\n\t\trefundKeys?: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<string>;\n\t\tnsig?: number;\n\t\trsig?: number;\n\t};\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/model/types/index.d.ts",
          "releaseTag": "Public",
          "name": "SwapOptions",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 24
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cashu/cashu-ts!SwapPayload:type",
          "docComment": "/**\n * Payload that needs to be sent to the mint when performing a split action\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type SwapPayload = "
            },
            {
              "kind": "Content",
              "text": "{\n\tinputs: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Proof",
              "canonicalReference": "@cashu/cashu-ts!Proof:type"
            },
            {
              "kind": "Content",
              "text": ">;\n\toutputs: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "SerializedBlindedMessage",
              "canonicalReference": "@cashu/cashu-ts!SerializedBlindedMessage:type"
            },
            {
              "kind": "Content",
              "text": ">;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/model/types/wallet/payloads.d.ts",
          "releaseTag": "Public",
          "name": "SwapPayload",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 10
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cashu/cashu-ts!SwapResponse:type",
          "docComment": "/**\n * Response from the mint after performing a split action\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type SwapResponse = "
            },
            {
              "kind": "Content",
              "text": "{\n\tsignatures: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "SerializedBlindedSignature",
              "canonicalReference": "@cashu/cashu-ts!SerializedBlindedSignature:type"
            },
            {
              "kind": "Content",
              "text": ">;\n} & "
            },
            {
              "kind": "Reference",
              "text": "ApiError",
              "canonicalReference": "@cashu/cashu-ts!ApiError:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/model/types/mint/responses.d.ts",
          "releaseTag": "Public",
          "name": "SwapResponse",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cashu/cashu-ts!SwapTransaction:type",
          "docComment": "/**\n * includes all data required to swap inputs for outputs and construct proofs from them.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type SwapTransaction = "
            },
            {
              "kind": "Content",
              "text": "{\n\tpayload: "
            },
            {
              "kind": "Reference",
              "text": "SwapPayload",
              "canonicalReference": "@cashu/cashu-ts!SwapPayload:type"
            },
            {
              "kind": "Content",
              "text": ";\n\toutputData: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "OutputData",
              "canonicalReference": "@cashu/cashu-ts!OutputData:class"
            },
            {
              "kind": "Content",
              "text": ">;\n\tkeepVector: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<boolean>;\n\tsortedIndices: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<number>;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/model/types/wallet/payloads.d.ts",
          "releaseTag": "Public",
          "name": "SwapTransaction",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 12
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cashu/cashu-ts!Token:type",
          "docComment": "/**\n * A Cashu token\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type Token = "
            },
            {
              "kind": "Content",
              "text": "{\n\tmint: string;\n\tproofs: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Proof",
              "canonicalReference": "@cashu/cashu-ts!Proof:type"
            },
            {
              "kind": "Content",
              "text": ">;\n\tmemo?: string;\n\tunit?: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/model/types/wallet/tokens.d.ts",
          "releaseTag": "Public",
          "name": "Token",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cashu/cashu-ts!TokenV2:type",
          "docComment": "/**\n * @deprecated\n *\n * Token V2 should no longer be used\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TokenV2 = "
            },
            {
              "kind": "Content",
              "text": "{\n\tproofs: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Proof",
              "canonicalReference": "@cashu/cashu-ts!Proof:type"
            },
            {
              "kind": "Content",
              "text": ">;\n\tmints: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<{\n\t\turl: string;\n\t\tids: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<string>;\n\t}>;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/model/types/wallet/index.d.ts",
          "releaseTag": "Public",
          "name": "TokenV2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 10
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cashu/cashu-ts!TokenV4Template:type",
          "docComment": "/**\n * Template for a V4 Token\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TokenV4Template = "
            },
            {
              "kind": "Content",
              "text": "{\n\tt: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "V4InnerToken",
              "canonicalReference": "@cashu/cashu-ts!V4InnerToken:type"
            },
            {
              "kind": "Content",
              "text": ">;\n\td: string;\n\tm: string;\n\tu: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/model/types/wallet/tokens.d.ts",
          "releaseTag": "Public",
          "name": "TokenV4Template",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cashu/cashu-ts!V4DLEQTemplate:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type V4DLEQTemplate = "
            },
            {
              "kind": "Content",
              "text": "{\n\te: "
            },
            {
              "kind": "Reference",
              "text": "Uint8Array",
              "canonicalReference": "!Uint8Array:interface"
            },
            {
              "kind": "Content",
              "text": ";\n\ts: "
            },
            {
              "kind": "Reference",
              "text": "Uint8Array",
              "canonicalReference": "!Uint8Array:interface"
            },
            {
              "kind": "Content",
              "text": ";\n\tr: "
            },
            {
              "kind": "Reference",
              "text": "Uint8Array",
              "canonicalReference": "!Uint8Array:interface"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/model/types/wallet/tokens.d.ts",
          "releaseTag": "Public",
          "name": "V4DLEQTemplate",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cashu/cashu-ts!V4InnerToken:type",
          "docComment": "/**\n * TokenEntry in a V4 Token\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type V4InnerToken = "
            },
            {
              "kind": "Content",
              "text": "{\n\ti: "
            },
            {
              "kind": "Reference",
              "text": "Uint8Array",
              "canonicalReference": "!Uint8Array:interface"
            },
            {
              "kind": "Content",
              "text": ";\n\tp: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "V4ProofTemplate",
              "canonicalReference": "@cashu/cashu-ts!V4ProofTemplate:type"
            },
            {
              "kind": "Content",
              "text": ">;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/model/types/wallet/tokens.d.ts",
          "releaseTag": "Public",
          "name": "V4InnerToken",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cashu/cashu-ts!V4ProofTemplate:type",
          "docComment": "/**\n * Template for a Proof inside a V4 Token\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type V4ProofTemplate = "
            },
            {
              "kind": "Content",
              "text": "{\n\ta: number;\n\ts: string;\n\tc: "
            },
            {
              "kind": "Reference",
              "text": "Uint8Array",
              "canonicalReference": "!Uint8Array:interface"
            },
            {
              "kind": "Content",
              "text": ";\n\td?: "
            },
            {
              "kind": "Reference",
              "text": "V4DLEQTemplate",
              "canonicalReference": "@cashu/cashu-ts!V4DLEQTemplate:type"
            },
            {
              "kind": "Content",
              "text": ";\n\tw?: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/model/types/wallet/tokens.d.ts",
          "releaseTag": "Public",
          "name": "V4ProofTemplate",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cashu/cashu-ts!WebSocketSupport:type",
          "docComment": "/**\n * WebSocket supported methods\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type WebSocketSupport = "
            },
            {
              "kind": "Content",
              "text": "{\n\tmethod: string;\n\tunit: string;\n\tcommands: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<string>;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/types/model/types/mint/responses.d.ts",
          "releaseTag": "Public",
          "name": "WebSocketSupport",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        }
      ]
    }
  ]
}
